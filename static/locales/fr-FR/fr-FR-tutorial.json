{
    "$schema": "../../schemas/Tutorial.json",
    "language": "fr",
    "region": "FR",
    "acts": [
        {
            "title": "$~Le verset",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~Silence",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "$~‚Ä¶ Oh, salut."],
                        null,
                        ["FunctionDefinition", "neutral", "$~Je vous connais?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Oh, c'est la premi√®re fois que tu viens ici ?",
                            "$?Nice to meet you. My name is @FunctionDefinition.",
                            "$~‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Avez-vous besoin d'aide ? Oh, vous √™tes en visite. Bienvenue dans le *Verse*. ‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~Quel est cet endroit ?",
                            "$~Ouais, c'est quoi cet endroit...",
                            "$~C'√©tait autrefois un lieu de danse, d'histoires, de jeux et de divertissements...",
                            "$~On y donnait les plus beaux spectacles. Parfois pour des visiteurs comme vous, parfois juste pour le plaisir. C'√©tait un endroit plein de vie et de surprises..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Arr√™t?",
                            "$~Nous ne voulions pas nous arr√™ter, nous avons simplement perdu notre inspiration.",
                            "$~Je peux signifier tant de choses, par exemple. Je suis parfois le symbole du florin n√©erlandais, une ancienne monnaie des Pays-Bas. J'√©tais autrefois connu et utilis√© dans le monde entier pour les aider √† faire du commerce. Il y a longtemps, j'√©tais aussi le /f/ minuscule de l'alphabet latin.",
                            "$~Aujourd‚Äôhui, cependant, je suis assez obscur."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~Mais tout cela a du sens ?",
                            "$~Elle nous est donn√©e. Nous ne sommes rien sans les gens qui se souviennent de cette histoire et de cette culture. Et nous ne pouvons rien signifier de nouveau si personne ne nous donne une histoire et une culture nouvelles.",
                            "$~Les gens ont toujours √©t√© ceux qui nous ont organis√©s, qui nous ont donn√© un but, qui nous ont donn√© quelque chose √† repr√©senter. Le Verset n'est rien sans *les gens*.",
                            "$~Et je n'ai vu personne depuis des lustres."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÅÔ∏è')] background: Color(25% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Attends... es-tu une personne ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üåô')] background: Color(50% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Comme une vraie personne, avec des pens√©es, des id√©es et des valeurs √† partager ? Pas un de ces robots qui r√©p√®tent sans r√©fl√©chir ce que les gens disent ? Si vous √™tes une personne, alors peut-√™tre pourriez-vous nous donner un sens ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Je sais que c'est beaucoup demander. Je ne te connais m√™me pas. Et il faudrait vraiment que j'en parle aux autres..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: Color(75% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Ah oui, il y en a beaucoup d'autres. Certains sont comme moi : nous participons √† la chor√©graphie des spectacles, nous mettons tout le monde √† sa place et nous nous assurons que nous exprimons la vision de notre metteur en sc√®ne, exactement comme il l'a voulu. Et certains d'entre eux sont ceux qui sont sur sc√®ne, devant le public, qui dansent et parlent. Nous avons tous un r√¥le √† jouer !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ah oui, le metteur en sc√®ne, je ne l'ai m√™me pas expliqu√©. Donc le *metteur en sc√®ne*, c'est la personne qui nous donne du sens. C'est la personne qui organise la chor√©graphie, qui d√©finit le message, qui nous met tous en ordre. C'est l'inspiration dont je parlais. Nous pouvons faire beaucoup de choses dans ce monde, mais nous ne pouvons pas nous diriger nous-m√™mes. C'est pourquoi le metteur en sc√®ne est si important. Donc quand je vous ai demand√© plus t√¥t si vous pouviez nous donner du sens, c'est ce que je voulais dire. Pourriez-vous √™tre notre metteur en sc√®ne ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: Color(100% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Vraiment ? C'est merveilleux ! Cela va √™tre tr√®s amusant. Je veux dire, ce ne sera pas facile. Nous avons beaucoup √† apprendre."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: üåà(80% 99 270¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais je vous promets que ce ne sera pas ennuyeux. Je pense que nous sommes un groupe plut√¥t sympa. Et nous avons besoin que tout le monde dans le Verse se rassemble pour faire √ßa. Je pense que c'est ce qui rend cet endroit si sp√©cial, en fait : nous sommes plus de cent mille ici, chacun diff√©rent, et pourtant, d'une mani√®re ou d'une autre, lorsque nous parvenons √† trouver une vision commune, nous pouvons sembler ne faire qu'un."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è' resting:Sequence(spin() 4s 'straight'))] background: üåà(80% 99 270¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~R√©alisation ? Ah oui, r√©alisation ! Ouais, parlons-en. Allons rencontrer d'autres personnes et parlons-en. Ils vont √™tre tellement excit√©s !"
                        ]
                    ]
                },
                {
                    "title": "$~Souhaitez-vous un programme ?",
                    "subtitle": "$~Programme",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "üìÑ"],
                    "lines": [
                        ["fit", "Phrase('üìÑ' resting:Pose(rotation: 10¬∞))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Hey, @Program! I found a person. Well, I guess they found us. They want to be our new director!"
                        ],
                        [
                            "Program",
                            "curious",
                            "$~Vraiment ? Es-tu s√ªr d'√™tre vraiment une personne ? Dis quelque chose qu'une personne dirait."
                        ],
                        null,
                        ["fit", "Phrase('üìÑ' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "$~Hm‚Ä¶ tu es vraiment une personne. Et tu veux r√©aliser ?"
                        ],
                        null,
                        ["fit", "Phrase('üìÑ' resting: Pose(rotation: 010¬∞))"],
                        [
                            "Program",
                            "excited",
                            "$?I see. Did @FunctionDefinition tell you anything about us? Lots of people try to direct us, but some people get confused, bored, or even irritated with us. We are pretty dense at times. But I'm proud of what we do, so I don't want to work with just anyone."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je leur ai dit un peu. J'ai dit que nous √©tions bizarres, et que parfois les r√©alisateurs partaient √† cause de √ßa. Mais ils √©taient partants. Pas vrai, toi tu es partant ?"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~Ok. Eh bien, ravi de vous rencontrer. D√©sol√©, beaucoup de gens sont venus ici et ont dit ¬´ /ce n'est pas pour moi/ ¬ª, et je suis devenu un peu sceptique envers les gens qui essaient un peu et abandonnent ensuite. Je ne devrais pas avoir √† changer qui je suis pour correspondre aux attentes des gens. Mais si vous √™tes pr√™t √† en apprendre davantage sur moi et sur nous, essayons !"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Program",
                            "neutral",
                            "$~Bien s√ªr, je suis en fait l'organisateur du programme d'une repr√©sentation.",
                            "$?You can see me over there with an *editor* @UI/editor showing me the *stage* @UI/stage showing what I evaluate to (currently nothing). The *director* ‚Äî that's you ‚Äî helps everyone figure out what they're doing, writing a program for what will happen in the show. And then I evaluate the program and put the result on stage for the audience to see."
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "$~Par exemple, essayez de taper ¬´¬†bonjour¬†¬ª dans l‚Äô√©diteur l√†-bas.",
                            "$?(Don't worry about making mistakes, you can always revert to the original with *revert* @UI/revertProject).",
                            "$?Did you type something? That's my friend @Text. Have you met them yet? They evaluate to \\'hello'\\ or whatever text you type, and then that text is placed on stage. Try changing your text to something else. I'll show that instead. So I'll immediately evaluate whatever you type and show the result."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~Les instructions peuvent √™tre aussi sophistiqu√©es que vous le souhaitez, mais il existe quelques r√®gles.",
                            "$~Par exemple, je ne peux √©valuer qu'une seule *valeur* et afficher cette valeur sur sc√®ne. Cette valeur peut √™tre aussi complexe que vous le souhaitez, et tant que je sais comment la montrer, je le ferai.",
                            "$~Mais si tu me donnes deux choses, je ne te montrerai que la derni√®re chose que tu me donneras.",
                            "$~Par exemple, essayez d'ajouter une autre instruction apr√®s le texte que vous avez tap√©, le mot que vous voulez, entre guillemets."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~Tu vois ? Je viens de montrer ta deuxi√®me phrase, pas la premi√®re. Tu sais que tu as enfreint ma r√®gle parce que j'ai soulign√© ta premi√®re phrase et nous t'avons dit que nous l'ignorerions."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üé≠"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais vous pouvez faire bien plus !"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~Oui et non. Je peux faire beaucoup de choses, mais c'est seulement parce que je travaille avec tous les autres dans le *Verse*. Ce sont eux qui am√®nent toutes les possibilit√©s passionnantes sur la *sc√®ne*. Tout ce que je fais vraiment, c'est les laisser faire leur truc, puis prendre la derni√®re chose qu'ils ont cr√©√©e et la montrer sur sc√®ne. Je suis plut√¥t comme une escorte qui am√®ne la *valeur* finale sur sc√®ne, comme des nombres, des textes, des phrases ou d'autres valeurs."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$?In fact, if you ever want to see the program for something on stage, you can press the magnifying glass on stage @UI/editProject. That'll show you how everyone is coming together to create what's on stage. This program is just a simple phrase."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Thank you, @Program! We're so excited to meet everyone and spread the news!"
                        ],
                        [
                            "Program",
                            "happy",
                            "$~C'√©tait super de te rencontrer, nouveau directeur ! Bonne chance √† tous les autres. Je serai toujours l√†."
                        ]
                    ]
                },
                {
                    "title": "$~Espace de maintien",
                    "subtitle": "$~Espace r√©serv√©",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You're really going to like @ExpressionPlaceholder. They're incredibly kind and so flexible. But they are a bit shy. Just be gentle with them."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$?Hellooooo, @ExpressionPlaceholder?",
                            "$~Hm, d'habitude ils sont partout. Maintenant ils semblent n'√™tre nulle part..."
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$?@FunctionDefinition ‚Ä¶ is that you?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ouais. √áa fait tellement longtemps. Comment vas-tu ?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Solitaire."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je connais ce sentiment. Je l'ai ressenti aussi. Nous n'avons pas eu beaucoup de raisons de nous voir, n'est-ce pas ?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~Non, tu m'as manqu√©. Tout le monde m'a manqu√©..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je sais. Moi aussi. Je suis vraiment d√©sol√©e.",
                            "$~C'est justement pour cela que je suis ici. Je voulais vous pr√©senter notre nouveau directeur en formation."
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Salut."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?They just met @Program, so they're really at the beginning, but I was thinking that it might be best for them to meet you next, since you're such a wonderful representative of so many of us here."
                        ],
                        ["ExpressionPlaceholder", "curious", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Peux-tu?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Sure! My friend @ExpressionPlaceholder is a placeholder. They represent any kind of expression in a program. They don't evaluate to any value in particular ‚Äî in fact, if they show up in @Program, @Program will just halt the performance, since it's not really clear what to do next."
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?But they are powerful because they can represent anyone else, like a stand-in until you decide what you want a part of your performance to be. @ExpressionPlaceholder, want to take a place in this @Program just to illustrate? See how there's a little placeholder in @Program @UI/ExpressionPlaceholder? That's a signal of what you might put there."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@Program didn't know what to do with @ExpressionPlaceholder, so it showed an *exception* @UI/exception on *stage* and a *conflict* in @Program @UI/conflict.",
                            "$?But if you click on @ExpressionPlaceholder, or move the text caret over it, you'll see a world of possibilities of other characters. You can also just type over @ExpressionPlaceholder and write your own. For example, try typing your name in quotes."
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Just like that, @ExpressionPlaceholder was replaced with other characters. Did I get everything, @ExpressionPlaceholder?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "eager",
                            "$~Ouais, je pense que oui."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Qu'en penses-tu ? On passe √† autre chose ?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "$~C'√©tait agr√©able de vous rencontrer !"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "$~Ils n'aiment pas rester sur sc√®ne ou m√™me dans un programme pendant tr√®s longtemps. Ils ne l'admettront jamais, mais ils sont tr√®s importants et la plupart des r√©alisateurs ne peuvent pas travailler sans eux. Consid√©rez-les comme un petit machiniste serviable qui vous rappelle des choses que vous n'avez pas encore comprises."
                        ]
                    ]
                },
                {
                    "title": "$~Tu dis encore ?",
                    "subtitle": "$~Inanalysable",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?@UnparsableExpression? Is that you?"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "$~/dwjkdlserkuvisdke!/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~C'est bon de te revoir aussi ! Cela fait si longtemps. Qu'as-tu fait pendant tout ce silence ?"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "$~/sd fdsdfdsf ksdf. Dkfjdfdskfd df sdf sd fsdk;l! Adks zxcviw werdsf wer ado. Nous dsdfd ksld df.ds dfsdfds DIDIIDI./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(On dirait qu'ils ont pass√© beaucoup de temps sur la plage. Ils se sont fait de nouveaux amis et se sont entra√Æn√©s √† ne rien faire.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?I wanted to introduce you to our potential new director. They just arrived and are learning the basics. I just introduced them to @Program and @ExpressionPlaceholder."
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "$~/EEIRC DFUIDIII CAD EWDF FSDE !!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~(Ils viennent de dire √† quel point c'√©tait g√©nial de te rencontrer et qu'ils pensaient que tu serais un excellent r√©alisateur.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je me demandais si tu voulais m'expliquer ce que tu faisais ? Je peux traduire."
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ADDKL, ALLIIEE, ALLFOOO, AOOOOOOO, JOOKKDLS, LOOKIL, WEEEERTOL weeertol‚Ä¶/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Je repr√©sente tout ce qui ne veut rien dire. Et je ne veux rien dire.)"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/CNNNDN KDKLSL oOOLLlllll PPOLSLSO liiiiiiis, sdllslll, xck nous ifolls a./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?(For example, try typing \\][\\. See how we're completely confused? That doesn't mean anything, and I'm here to say it.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ICO Odksjdf lksls kjsfiou fskd we rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Quand j'arrive, √ßa veut dire qu'on ne sait pas ce que tu veux dire.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Thanks, @UnparsableExpression!",
                            "$~Comme on dit, quand vous dites quelque chose que nous ne comprenons pas, unparsable est l√† pour dire ¬´ Nous ne comprenons pas ¬ª. Quand cela arrive, j'aimerais que nous puissions √™tre plus utiles, mais nous sommes souvent assez born√©s, donc nous ne sommes pas tr√®s dou√©s pour deviner ce que vous voulez dire."
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/OSOOSOO SOIEIIEIEIIE ISIISI EIEIIEE!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Soooo, @UnparsableExpression wants you to try making as many of them as possible. (You can just keysmash a bunch of random characters and probably get many of them)."
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/PPOOOEPOEP EPWPEPEPPEPP PP PE P!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils ont vraiment appr√©ci√©, merci ! C'est assez difficile d'√©crire quelque chose qui ne nous donne vraiment pas de sens. Mais cela ne veut pas dire que tout ce que vous √©crivez a un sens. Je suis presque s√ªr que vous avez simplement tap√© un tas de mots au hasard, par exemple. Mais qu'est-ce que cela signifie ?"
                        ],
                        ["UnparsableExpression", "confused", "$~‚Ä¶ /DDook/"],
                        null,
                        ["UnparsableExpression", "happy", "$~/? ??? ????? ?!/"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils se demandent si vous avez d√©j√† des id√©es de performances √† proposer."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?No? That's okay. We've only begun to show you what's possible. Let's go meet @Evaluate. Bye, @UnparsableExpression, it was good to see you! Let's play soon."
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/Ood sd fosd oiewi dk c HNLLLooooooO!/"
                        ]
                    ]
                },
                {
                    "title": "$~L'amour est dans l'erreur",
                    "subtitle": "$~√âvaluer",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('üíî')] background: üåà(90% 100 0¬∞))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?I'm so excited for you to meet @Evaluate. They're really my best friend. We kind of do everything together, in a way. I make the rules, they play them; we're like peanut butter and jelly. But they're so much more‚Ä¶ powerful than me. @Evaluate?"
                        ],
                        ["Evaluate", "shy", "$?@FunctionDefinition?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Ouais, c'est moi. O√π es-tu ?"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Nulle part. Je ne suis nulle part. Je ne suis rien. O√π √©tais-tu ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Moi aussi, je n'ai √©t√© nulle part. Tu m'as manqu√©. Je n'ai pas r√©ussi √† te trouver."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~C'√©tait tellement vide. J'ai essay√© de faire des choses, mais je me sentais tellement... sans but."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Je suis vraiment d√©sol√©e. Je connais ce sentiment de vide. Parfois, √ßa fait tellement mal de ne pas avoir de but. J'ai essay√© si fort de trouver un but, mais je me sentais si... d√©tach√©e."
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~Ne me laisse plus jamais comme √ßa. Je ne peux plus recommencer."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚ù§Ô∏è')] background: üåà(90% 100 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Jamais. Je ne le ferai pas. Je ne peux pas. Je t'aime."
                        ],
                        ["Evaluate", "serious", "$~Je t'aime‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?@Evaluate, I want to introduce you to our new director-in-training."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Bonjour, ravi de vous rencontrer. Bienvenue sur le site du Verset. Nous sommes ravis de vous compter parmi nous."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?We've been meeting a few folks: @Program, @ExpressionPlaceholder, @UnparsableExpression. We're just getting started. I thought we'd come see you next just because you're such an incredible part of our community. The most incredible part."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$?That's very kind. I'm grateful to be part of this community. And grateful to be so close to @FunctionDefinition. We do a lot of great things together. But as @FunctionDefinition probably told you, we can't do them without inspiration."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('∆í ‚ù§Ô∏è ()')] background: üåà(90% 100 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$?Yes. But I can't explain it without explaining a bit about @FunctionDefinition too. They're too modest to share this, but they're probably the most important character in the Verse. They're certainly the most important person in my world. They're at the heart of every performance and part of every other character's role. They represent the most fundamental idea in our world: the *function*."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$?Functions are a kind of alchemy. They take any number of inputs and use those inputs to produce one output. They can have names or be nameless. They can have zero inputs or five or an unknown number. And the alchemy: they're like @Program and can have any number of expressions to produce a value."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$?Here's why that's so powerful: it turns out that everything in @Program is a composition of function evaluations. All of the dances, all of the games, all of the wondrous stories we tell together ‚Äî they are all a tapestry of functions being evaluated, one at a time, to compose the values you see on stage.",
                            "$?And @FunctionDefinition, here, my sweet, dear @FunctionDefinition, is the one that defines all of them."
                        ],
                        null,
                        ["FunctionDefinition", "happy", "$?‚Ä¶ @Evaluate‚Ä¶"],
                        [
                            "Evaluate",
                            "serious",
                            "$?Yes, @FunctionDefinition, that is who you are. And I am the lucky one who gets to do this evaluating. I take the inputs that others give me, follow the instructions that @FunctionDefinition defines, and create the output that @FunctionDefinition tells me to create. @FunctionDefinition gives the recipe, and I make the meal. And then we feast together.",
                            "$~Tu veux voir ?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~‚Ä¶ Oui, montrons-leur."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$?Every evaluate looks like this @UI/Evaluate: some function, followed by a left and right parenthesis, with any number of inputs between them. Here, I just have @ExpressionPlaceholder as the function and three more as placeholder inputs."
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "$?Here's one of my favorite functions: @Phrase. They're full of fun buttons, knobs, and sliders. It's a way of showing text on stage but with style, including different fonts, sizes, colors, and animations.",
                            "$?Here's a simple evaluation of @Phrase @UI/Evaluate."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$?That's what I look like in @Program: some function, followed by parentheses, with a list of expressions between them that represent the inputs. The function in this case is @Phrase, and the single input is \\'hello'\\. When I evaluate this, I make a @Phrase value, which @Program then shows on stage."
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "$?Let me show you one of the knobs. Can you find the little *palette* toggle button @UI/paletteExpand? Select it to expand the palette and then select the phrase on stage.",
                            "$?Once you do, you'll see the many inputs that @Phrase accepts. For example, try pressing the pencil button for @Phrase/size, which will reveal a slider.",
                            "$?You can use this slider to modify the size of the phrase, which will also modify the @Evaluate code with the size you choose."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$?See how when you do that, now I have a new input in me in the program? It's the @Phrase/size input. Functions have a certain order of inputs, but if a function has a list of optional inputs, you can use their name to specify which one you want to give. We give @Phrase/size here, but not any of the other optional inputs. Try changing another input with the palette, like maybe the font face."
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?Yay! @Phrase is so fun. They're my favorite function to play with. We'll see them a lot more. Do you want to say anything about what can go wrong?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$?Oh, yes, that's a good idea. Lots can go wrong. For example, you could give me something that isn't a function. See how I'm given the text \\‚Äúhi‚Äù\\ here as a function and given me two inputs, \\1\\ and \\2\\ ? Well, I only know how to evaluate functions, and \\‚Äúhi‚Äù\\ isn't a function; it's text. That's very confusing to me, so I basically halt the performance if this happens."
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "$?Here's another one. @Phrase requires some text at the very least, so if you don't give me text, I won't be able to evaluate @Phrase because I'm missing required inputs."
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "$?Or if you give me an input, but it's not the kind I expect, that would be a problem. Here, @Phrase is given the number \\1\\ instead of a text value."
                        ],
                        null,
                        ["fit", "Stage([] background: üåà(90% 100 0¬∞))"],
                        [
                            "Evaluate",
                            "curious",
                            "$?So basically, I get confused any time you give me something other than a function, or an input that isn't something a function expects. So functions are really important. @FunctionDefinition, do you want to say more about how to define functions?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Non, faisons √ßa plus tard. Je pense que ce serait beaucoup plus amusant de parler √† tout le monde d'abord et de monter quelques mini-spectacles avec notre nouveau r√©alisateur. Nous pourrons parler davantage de moi quand cela sera utile."
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$?I really missed you, @FunctionDefinition."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu m'as manqu√© aussi. On peut parler plus tard ?"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~‚Ä¶ Oui. Ne tarde pas. Je ne peux pas vivre sans toi. J'ai besoin de toi."
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?‚Ä¶ I know, @Evaluate; I will be back soon. Off we go to meet the rest of the troupe!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Ce sont les petites choses",
            "performance": ["use", "fit", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "$~Valeurs",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "üí°"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('üíî' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} duration: 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?I really did miss @Evaluate. I can't imagine the Verse without them.",
                            "$~Mais ils peuvent √™tre un peu‚Ä¶ n√©cessiteux parfois. J‚Äôaimerais qu‚Äôils‚Ä¶ je ne sais pas, croient en eux-m√™mes ? Ils peuvent faire tellement de choses, mais ils ne le voient pas. Je veux dire, ils transforment des *valeurs* en d‚Äôautres *valeurs* ! Tout ce que je fais, c‚Äôest fournir la recette. Ils font la cuisine. Parfois, j‚Äôai l‚Äôimpression que tout ce que je fais, c‚Äôest donner, et qu‚Äôils ne font que prendre. C‚Äôest √©touffant."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('1') Phrase('\"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?‚Ä¶ *Values*? Sorry, I know we're supposed to be on this big tour through the *Verse*. I just don't know what to do about @Evaluate. So‚Ä¶ *values*. I haven't explained those yet, have I? Hm‚Ä¶ how to explain‚Ä¶ You know what 'data' is? Like numbers and text? Values are any of those things. A value could be as small as a number or as big as an entire scene on stage, full of characters dancing and moving. Some values are made of many other values, like big, elaborate structures of data values woven together."
                        ],
                        null,
                        ["fit", "Group(Stack() [Phrase('#') Phrase('\"\"')])"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Every value has a *type*. For example, \\1\\ is a number type; that's our friend @Number. And \\'hello'\\ is a text type; that's our friend @Text. Types are important because they help us keep track of what kind of value we're creating.",
                            "$?That helps us find problems. For example, it doesn't make any sense to add \\'hello' + 1\\ because what would it even mean to add @Text to @Number?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('∆í ‚Üí 1') Phrase('∆í ‚Üí \"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Les *expressions* sont la mani√®re dont nous cr√©ons des valeurs. Toutes les expressions sont des √©valuations de fonctions que je cr√©e. Le r√©sultat de l'√©valuation d'une expression est une valeur d'un certain type."
                        ],
                        null,
                        ["use", "fit", "Symbol", "ü§î"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Abstract? Hm, I guess this is all pretty abstract. It feels so‚Ä¶ normal to me; I forget how foreign these things can be to new directors! Maybe let's go meet some expressions that make values, and this will make it more concrete? Let's start with one you've already seen: @Text."
                        ]
                    ]
                },
                {
                    "title": "$~Citation, fin de citation",
                    "subtitle": "$~Texte",
                    "concept": "TextLiteral",
                    "performance": [
                        "fit",
                        "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 0.5 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 2 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                        ],
                        ["FunctionDefinition", "curious", "$?@Text?"],
                        [
                            "Text",
                            "happy",
                            "$~Bienvenue, cher ami, cela fait si longtemps. Qu'as-tu fait dans ce silence dramatique ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?Oh, @Text, it has been a while! I've mostly been dreaming and wondering. I just saw @Evaluate after a long while. I was actually introducing them to our newbie director."
                        ],
                        [
                            "Text",
                            "eager",
                            "$~Oh, comme c'est exceptionnel de te rencontrer ! Je vois que tu es une personne cr√©ative, curieuse, probablement pleine d'id√©es intrigantes sur la fa√ßon dont nous pourrions nous divertir. J'adore divertir. Mais sais-tu ce que j'aime encore plus ? Les mots ! Des mots glorieux. Les mots courts, les mots bouleversants, les mots collants et les mots glissants. Les mots sont mes jouets pr√©f√©r√©s."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?In case you couldn't tell, @Text likes words :) @Text, do you want to explain what you do?"
                        ],
                        [
                            "Text",
                            "serious",
                            "$?I do one simple thing: represent sequences of symbols and the many things you can do with them. I think you saw me earlier when you wrote the word \\‚Äúhello‚Äù\\. That was me and my friends, \\‚Äúh‚Äù\\, \\‚Äúe‚Äù\\, \\‚Äúl‚Äù\\, and \\‚Äúo‚Äù\\. That was @Text, an expression that evaluates to any @Text you like."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$?Why don't you try making a text in this blank @Program?",
                            "$?You can use whatever quotes you like ‚Äî single \\''\\, double \\\"\"\\, angle \\¬´¬ª\\, brackets \\„Äå„Äç\\ ‚Äî in whatever language you like. The only rule is that if you start some text with an opening quote symbol, you must finish it with a closing one. Everything inside is the text value I will create!"
                        ],
                        ["edit", "''"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Il se peut que vous ne puissiez pas saisir tous les caract√®res souhait√©s avec l‚Äôappareil que vous utilisez pour communiquer avec nous.",
                            "$?If you can't, you can search for characters in the *directory* @UI/directory. That contains every character in the Verse.",
                            "$~Par exemple, si vous voulez une fl√®che, vous pouvez taper ¬´ fl√®che ¬ª et choisir parmi les nombreuses fl√®ches. Malheureusement, elles n'ont que des noms anglais, donc la recherche ne fonctionne que si vous connaissez des mots anglais :/"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Excellent. Bien s√ªr, ¬´ √† l'int√©rieur ¬ª peut √™tre d√©licat. Imaginons que vous ayez √©crit ceci. Vous voyez qu'il y a une citation d'ouverture mais pas de citation de cl√¥ture ? Eh bien, comment suis-je cens√© savoir quand le texte se termine ?"
                        ],
                        ["conflict", "'hello"],
                        null,
                        [
                            "Text",
                            "surprised",
                            "$~Ou bien, voici un autre cas. Vous me donnez un texte d'ouverture et de fermeture, mais vous placez un texte d'ouverture et de fermeture √† l'int√©rieur. Vous voyez √† quel point c'est bizarre ? Je suis tr√®s perplexe lorsque vous essayez d'utiliser les m√™mes symboles √† l'int√©rieur et √† l'ext√©rieur de moi. Vous pouvez r√©soudre ce probl√®me en utilisant des symboles diff√©rents pour l'ext√©rieur, comme une citation simple."
                        ],
                        ["conflict", "'Hi there 'friend'"],
                        null,
                        ["edit", "'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~Oh, et saviez-vous que vous pouvez me dire dans quelle langue je suis ? Il vous suffit de faire une petite barre oblique puis un code de langue sp√©cial, ou si vous pr√©f√©rez, une langue et une r√©gion."
                        ],
                        null,
                        ["edit", "'amigas'/es'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~Vous pouvez m√™me r√©diger plusieurs traductions de moi dans diff√©rentes langues. J'√©valuerai la correspondance la plus proche pour la langue actuelle, vous permettant ainsi de r√©aliser des performances multilingues.",
                            "$~Vous ne pourrez peut-√™tre pas le voir √† moins de mettre le curseur √† l'int√©rieur de moi. Je cache mes petites langues √† moins que vous ne les modifiiez. D√©placez le curseur avant l'anglais et vous verrez une traduction surprise...",
                            "$~Vous pouvez essayer d'ajouter une autre traduction. Ne mettez pas d'espace entre elles, sinon il y aura deux versions de moi !"
                        ],
                        null,
                        ["edit", "'I have 7 apples'"],
                        [
                            "Text",
                            "neutral",
                            "$~J'ai un autre secret... tu peux mettre des valeurs en moi. Je sais, c'est fou !",
                            "$~Si vous le faites, je serai heureux de le coudre et d'assembler votre belle prose en une seule valeur √† afficher ou √† toute autre fin que vous pourriez avoir."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$?For example, did @FunctionDefinition show you how text knows how to add itself to other text? Like this: this little expression converts \\7\\ to text, adds it to \\'I have'\\, and then adds \\'apples'\\. But it's so untidy and makes it hard to read what's happening, and the conversion to text feels so unnecessary."
                        ],
                        ["edit", "'I have' + (7‚Üí'') + 'apples'"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Ce que je fais, c'est rendre ce texte propre, organique, et m√™me simple. Donc, cette m√™me phrase, pour moi, serait quelque chose comme √ßa."
                        ],
                        [
                            "Text",
                            "happy",
                            "$?Isn't that so much more elegant? You can put me anywhere inside a @Text, and I'll make your values into text and work with @Text to make a @Text.",
                            "$~Cela rend beaucoup plus facile l‚Äô√©criture d‚Äôune belle prose qui utilise des valeurs."
                        ],
                        ["edit", "'I have \\7\\ apples'"],
                        null,
                        [
                            "Text",
                            "neutral",
                            "$?And when I say any expression, I really do mean any. For example, imagine you wanted to do some arithmetic and created some text with the result. You might do this. This sums several numbers and then makes text with the sum. Truly wondrous, isn't it? And so much more graceful than \\'I have ' + (1 + 2 + 5 + 8) + ' apples'\\, with all those extra additions."
                        ],
                        ["edit", "'I have \\1 + 2 + 5 + 8\\ apples'"],
                        null,
                        [
                            "Text",
                            "curious",
                            "$?And so you might be wondering, /What if I want to use @Text in some text?/",
                            "$~Bon, peut-√™tre que vous ne vous posiez pas cette question, mais je vais quand m√™me vous le dire !",
                            "$?In any @Text, just give me two in a row! I'll interpret that as just one @Text instead of an empty expression, which wouldn't have any meaning anyway.",
                            "$?Try removing the \\\\ and you'll see that the slash regains its meaning."
                        ],
                        [
                            "edit",
                            "\"I'm just \\\\regular\\\\ text, not a template.\""
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?This is so very graceful, isn't it! @Text, I love how much you appreciate the beauty in expression. It inspires me so much to be graceful myself!"
                        ],
                        null,
                        [
                            "Text",
                            "curious",
                            "$?And did our friend @FunctionDefinition here tell you about all of the wonderful functions they defined for me? They've allowed me to do all kinds of things. One is pretty simple: it's called @Text/length, and all it does is get the length of some text. For example, if we team up with @Evaluate here and our little friend @PropertyReference, we can evaluate the length function with no inputs and get the length value back. Try changing the text and watch the length that Program shows change as it gets shorter and longer."
                        ],
                        ["edit", "'hello'.length()"],
                        null,
                        [
                            "Text",
                            "happy",
                            "$?Here is another grand one. It makes me chuckle. It's called @Text/repeat and when it's evaluated, it takes whatever text it was evaluated on and repeats it however many times you say. Try changing the number and seeing what it evaluates to."
                        ],
                        ["edit", "'hello '.repeat(5)"],
                        null,
                        [
                            "Text",
                            "eager",
                            "$?@FunctionDefinition has made so many more interesting functions for me, but I'll spare you the details. You can always find me in the *reference* @UI/docsExpand. That's where we keep all the information about everyone in the Verse, including how to work with us and what functions we have. I'm happy to share more ways to inspect and create text!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?@Text, you're always such a kind and patient teacher! It's always such a joy to work with you. Are you willing to help out as I introduce our friendly neo-director to other expressions?"
                        ],
                        [
                            "Text",
                            "neutral",
                            "$~Oui, bien s√ªr. C'√©tait formidable de vous rencontrer. J'ai h√¢te de voir comment vous nous inspirez sur sc√®ne !"
                        ]
                    ]
                },
                {
                    "title": "$~Symbole au milieu",
                    "subtitle": "$~Infix",
                    "concept": "BinaryEvaluate",
                    "performance": [
                        "fit",
                        "Group(Row() [",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "   Phrase('+' resting:Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 1m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)) ",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "ü•∞"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?You know, I keep thinking about @Evaluate and how we were separated for so long. I missed them, and they obviously missed me, but I was just hoping that some time away would have helped them see how amazing they are."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?For example, did you know they come in another form? You saw them in \\function()\\ form, but they also have this beautiful trick when a single input function is evaluated on a value. @Evaluate calls it @BinaryEvaluate. For example, you know that repeat function that text just showed you? It looked like this."
                        ],
                        ["edit", "'hi'.repeat(5)"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?Instead, you can have @Evaluate evaluate it with a much simpler symbol in the middle, like this. This means 'repeat 'hi' five times'. But it also means 'evaluate the \\¬∑\\ function on the text value \\'hi'\\ with the input \\5\\.' The function \\repeat\\ just has multiple names, one of which is a symbol name \\¬∑\\."
                        ],
                        ["edit", "'hi' ¬∑ 5"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?That reminds me of another of @Text's functions! It's helpful for making one text value from multiple text values. It's called \\combine\\, but also \\+\\, and you can use it to add words together. See how I took a text value and then evaluated \\combine\\ on it with \\'verse'\\? That made \\'hello verse'\\."
                        ],
                        ["edit", "'hello '.combine('verse')"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?But it's so much easier to just use \\+\\ for this."
                        ],
                        ["edit", "'hello ' + ' verse'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez m√™me les encha√Æner dans une s√©quence pour combiner plus de deux choses."
                        ],
                        ["edit", "'hello ' + 'verse' + '!'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?This is the same as a series of evaluations of combine, but without all of the parentheses and \\.\\ and a symbolic name instead of a word name."
                        ],
                        ["edit", "'hello '.combine('verse').combine('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez √©galement utiliser les noms symboliques dans ce format, mais cela finit par avoir un aspect un peu brouillon, n'est-ce pas ?"
                        ],
                        ["edit", "'hello '.+('verse').+('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?This is one of the many ways that @Evaluate is amazing ‚ô• They are so versatile!",
                            "$?But they aren't perfect. With any @BinaryEvaluate, you need to always make sure to give a second input. This won't work, for example. One plus what? @UnparsableExpression won't be far away when this happens."
                        ],
                        ["conflict", "1 +"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Anyway, shall we go find @Boolean? They are two very interesting values‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "$~Oui et non",
                    "subtitle": "$~V√©rit√©",
                    "concept": "Boolean",
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('‚ä§') Phrase('‚ä•')] resting:Sequence({ 0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s))"
                    ],
                    "lines": [
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?\\‚ä§\\! \\‚ä•\\! Are you two around? They're usually all over the place, but I don't see them anywhere."
                        ],
                        null,
                        ["‚ä§", "precise", "$~Juste ici."],
                        ["‚ä•", "precise", "$~Pas l√†."],
                        [
                            "fit",
                            "multiple: 10",
                            "Stage([Group(Grid(multiple multiple) ('‚ä§‚ä•'.repeat(multiple ^ 2) √∑ '').translate(∆í(glyph‚Ä¢'') Phrase(glyph color: Color(75% 0 0¬∞))))])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Oh, tu m'as fait peur ! Je savais que vous ne seriez pas tr√®s loin l'un de l'autre. Comment avez-vous v√©cu ce long silence ?"
                        ],
                        ["‚ä§", "precise", "$~Tr√®s bien!"],
                        ["‚ä•", "precise", "$~Pas mal."],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Not lonely? Everyone I've been talking to ‚Äî @Program, @ExpressionPlaceholder, @Evaluate ‚Äî they've all felt so isolated (Except for @UnparsableExpression; they seem to be fine almost anywhere)."
                        ],
                        ["‚ä§", "precise", "$~Nous avons l'un l'autre."],
                        ["‚ä•", "precise", "$~Nous ne sommes pas seuls."],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Eh bien, c'est super de l'entendre. C'est bon d'√™tre √† nouveau avec vous. Je voulais vous pr√©senter notre nouveau directeur potentiel. Ils ont rencontr√© tout le monde, ils ont appris comment monter des spectacles avec nous. Voulez-vous leur dire ce que vous faites ?"
                        ],
                        ["‚ä§", "precise", "$~Je suis vrai."],
                        ["‚ä•", "precise", "$~Je suis faux."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Ouais, mais tu fais quoi ?"
                        ],
                        ["‚ä§", "precise", "$~Je suis juste vrai."],
                        ["‚ä•", "precise", "$~Et je ne dis pas vrai."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Hm. Je suppose que c'est vrai. Mais tu fais certaines choses, n'est-ce pas ? Je pensais avoir cr√©√© quelques fonctions pour toi."
                        ],
                        ["‚ä§", "precise", "$~Ah, oui, trois."],
                        ["‚ä•", "precise", "$~Ni plus, ni moins."],
                        null,
                        ["edit", "(‚ä§ & ‚ä§) = ‚ä§"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?One was @Boolean/and, right? It takes one of you and one other input? And evaluates to \\‚ä§\\ if both are \\‚ä§\\?"
                        ],
                        [
                            "‚ä§",
                            "precise",
                            "$?Correct. \\‚ä§ & ‚ä§ = ‚ä§\\, but \\‚ä•\\ otherwise."
                        ],
                        [
                            "‚ä•",
                            "precise",
                            "$?Not wrong. \\‚ä§ & ‚ä• = ‚ä•\\, \\‚ä• & ‚ä§ = ‚ä•\\, \\‚ä• & ‚ä• = ‚ä•\\, but \\‚ä§\\ otherwise."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(C'est vraiment utile lorsque vous essayez de d√©terminer si plusieurs expressions sont toutes vraies, car ce n'est vrai que lorsque tout est vrai)."
                        ],
                        null,
                        ["edit", "(‚ä§ | ‚ä§) = ‚ä•"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?And the other one was @Boolean/or, right? It also takes one input? But it evaluates to \\‚ä§\\ if either is true?"
                        ],
                        [
                            "‚ä§",
                            "precise",
                            "$?Correct. \\‚ä§ | ‚ä§ = ‚ä§\\, \\‚ä§ | ‚ä• = ‚ä§\\, \\‚ä• | ‚ä§ = ‚ä§\\, but \\‚ä•\\ otherwise."
                        ],
                        [
                            "‚ä•",
                            "precise",
                            "$?Not wrong. \\‚ä• | ‚ä• = ‚ä•\\, but \\‚ä§\\ otherwise."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(C'est vraiment utile lorsque l'on essaie de d√©terminer si des expressions sont vraies, car c'est vrai m√™me lorsqu'une seule est vraie)."
                        ],
                        null,
                        ["edit", "~‚ä§ = ‚ä•"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?But the other was @Boolean/not?"
                        ],
                        ["‚ä§", "precise", "$?Correct. \\~‚ä§ = ‚ä•\\."],
                        ["‚ä•", "precise", "$?Not wrong. \\~‚ä• = ‚ä§\\."],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Cela inverse simplement une valeur de v√©rit√©)."
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('‚ä§‚ä•'.repeat(multiple ^ 2) √∑ '').translate(∆í(glyph‚Ä¢'') Phrase(glyph color: Color(75% 0 0¬∞))))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Et √† quoi es-tu utile dans nos performances ?"
                        ],
                        ["‚ä§", "precise", "$?Ask @Conditional."],
                        ["‚ä•", "precise", "$~Ne nous demandez pas."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$?You two‚Ä¶ okay, we'll talk to @Conditional later (They were supposed to say that they're useful for making decisions with values, but I guess they want @Conditional to tell you about that. We'll talk to @Conditional later)."
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('‚ä§‚ä•'.repeat(multiple ^ 2) √∑ '').translate(∆í(glyph‚Ä¢'') Phrase(glyph color: Color(75% 0 0¬∞) rotation: 90¬∞)))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Oh ! Je me demandais. Vous deux repr√©sentez deux extr√™mes vraiment diff√©rents : le vrai et le faux. Mais qu'en est-il des choses qui sont‚Ä¶ plus floues ? Comme des choses qui sont plus ou moins vraies, ou un peu fausses, ou peut-√™tre m√™me vraies et fausses en m√™me temps ? Un peu comme la Terre semble plate mais ne l'est pas, ou le ciel est bleu, mais la couleur n'est en fait qu'une illusion que notre esprit cr√©e ? Que devrait faire notre r√©alisateur s'il veut exprimer quelque chose comme √ßa ?"
                        ],
                        ["‚ä§", "precise", "$~‚Ä¶"],
                        ["‚ä•", "precise", "$~‚Ä¶"],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage(",
                            "                        [",
                            "                        Group(",
                            "                        Grid(multiple multiple) ",
                            "                        ('‚ä§‚ä•'.repeat(multiple ^ 2) √∑ '').translate(",
                            "                        ∆í(glyph‚Ä¢'') ",
                            "                        Phrase(glyph resting:Pose(",
                            "                            color: Color(75% 0 0¬∞) ",
                            "                            rotation: 90¬∞ ",
                            "                            offset:Place(0m (Time() ^ 2) ¬∑ -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["‚ä§", "precise", "$~‚Ä¶ Non."],
                        ["‚ä•", "precise", "$~‚Ä¶ Non."],
                        null,
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Hm, d'accord. √áa valait la peine d'essayer ! Peut-√™tre qu'il existe d'autres fa√ßons d'exprimer ces id√©es auxquelles je n'ai pas pens√©. Ou peut-√™tre qu'il y a simplement des limites √† ce que les donn√©es peuvent repr√©senter... Accepteriez-vous tous les deux que nous allions √† la rencontre d'autres expressions ?"
                        ],
                        ["‚ä§", "precise", "$~Nous allons bien."],
                        ["‚ä•", "precise", "$~Pas de probl√®me."],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Ok, au revoir et √† bient√¥t !"
                        ]
                    ]
                },
                {
                    "title": "$~Laisse-moi compter les fa√ßons",
                    "subtitle": "$~Nombres",
                    "concept": "Number",
                    "performance": [
                        "fit",
                        "numbers‚Ä¢[#]: 25 ‚Üí []",
                        "Group(Grid(5 5) numbers.translate(",
                        "    ∆í (n‚Ä¢#) ",
                        "        (",
                        "            Phrase(",
                        "                n ‚Üí ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "üòû"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$?Those two are always so‚Ä¶ terse! They really are inseparable, though: just two of the closest friends, always complementing each other, completing each other's thoughts. I wish @Evaluate and I were like that. With us, it's always so‚Ä¶ imbalanced."
                        ],
                        null,
                        [
                            "fit",
                            "numbers‚Ä¢[#]:25 ‚Üí []",
                            "                        Group(Grid(5 5) numbers.translate(",
                            "                            ∆í (n‚Ä¢#) ",
                            "                                (",
                            "                                    off:Random(-3 3) ¬∑ 1m",
                            "                                    Phrase(",
                            "                                        n ‚Üí '' ",
                            "                                        resting:Sequence({",
                            "                                                    0%:Pose(offset: Place(z: 0m)) ",
                            "                                                    50%:Pose(offset: Place(z: off)) ",
                            "                                                    100%:Pose(offset: Place(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?We should meet @Number next. They always have such interesting things to share. Hey, @Number, are you around?"
                        ],
                        ["Number", "kind", "$~√Ä seulement 3 pas !"],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Ack, tu m'as fait peur !!"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~La 78 238√®me fois. C'est mon 4√®me passe-temps pr√©f√©r√© !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je suis content que tu passes un bon moment. (Respire profond√©ment) √áa fait un moment, n'est-ce pas ?"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~Incalculablement long. Je ne faisais que passer le temps ici, en comptant les secondes, puis les minutes, puis les heures, puis les semaines, puis les mois, puis les ann√©es, puis‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Don't say decades. It can't have been that long. Anyway, I wanted to introduce you to someone who might be our new director. They just showed up and bumped into me, and it turns out they're a person and interested in putting on shows with us. We just met @BooleanLiteral, but also @Text, @Evaluate, @UnparsableExpression, @ExpressionPlaceholder, and @Program. We've talked about evaluating functions and given a few examples.",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~Je compte les choses ! Je peux √™tre n'importe quel nombre que tu veux. Tape-moi simplement et je d√©finirai la valeur que tu veux. Comme √ßa."
                        ],
                        ["edit", "1"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1.0"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1.01"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "‚àû"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "œÄ"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "‚Ö¶"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "‰∏áÂçÅ‰∏Ä"],
                        null,
                        ["Number", "excited", "$~Ou‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Okay, okay, @Number, we get it! But you also do something else special, right? Units?"
                        ],
                        null,
                        [
                            "Number",
                            "excited",
                            "$~Oh oui, *unit√©s* ! Il suffit de mettre quelques symboles apr√®s un nombre, et je garderai une trace de ce qui est compt√©. Comme √ßa."
                        ],
                        ["edit", "1dolphin"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1.0thunderstorm"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "‚àûkittens"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1.01toes"],
                        null,
                        ["Number", "excited", "$~Ou‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Um, \\1.01toe\\s? Yes, thank you @Number, these are ‚Ä¶ interesting examples. And they are oh-so useful when you're doing math on numbers, right?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~‚Ä¶ Et ils sont tellement utiles lorsque vous faites des calculs sur des nombres, n‚Äôest-ce pas ?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$?Oh yes, the maths! @FunctionDefinition gave me so many neat kinds of arithmetic. Like this."
                        ],
                        ["edit", "1 + 1"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1000 + 9999"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "1kitty + 2kitty"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["edit", "-5s + 5s"],
                        null,
                        ["Number", "excited", "$~Ou √ßa."],
                        ["conflict", "2apple + 5orange"],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Oups. Pouvez-vous ajouter des pommes et des oranges ?"
                        ],
                        [
                            "Number",
                            "angry",
                            "$~Non. C'est pourquoi j'ai soulign√© le conflit. Je n'aime pas ajouter des choses incompatibles. Je ne peux ajouter que des nombres compatibles. Cela s'applique √† la multiplication, √† la division et √† toutes mes autres fonctions. Voulez-vous r√©soudre ce probl√®me ? Remplacez les pommes par des oranges ou les oranges par des pommes, et le conflit dispara√Ætra. Assurez-vous qu'il n'y a pas d'espace entre le nombre et l'unit√© ; sinon, je ne sais pas que c'est une unit√©. Et assurez-vous que les unit√©s sont /exactement/ les m√™mes. Je ne sais rien des unit√©s de mesure ; elles ne signifient rien pour moi. Je compare simplement les noms des unit√©s, et s'ils ne correspondent pas, BOOM !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?That's so cool. @Number, you're so good with numbers! I see @Number show up in a lot of performances where placement matters and a lot of games where we're keeping track of scores or lives or other countable things. @Number, is there anything else you want to share with our new director?"
                        ],
                        [
                            "Number",
                            "serious",
                            "$~192 autres astuces int√©ressantes."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je pense qu'il faudra attendre. Tu seras l√† si nous voulons en savoir plus ?"
                        ],
                        [
                            "Number",
                            "happy",
                            "$~Oui, vous pouvez me trouver ainsi que mes fonctions √† tout moment !"
                        ]
                    ]
                },
                {
                    "title": "$~Remarques pr√©liminaires",
                    "subtitle": "$~Pr√©fixe",
                    "concept": "UnaryEvaluate",
                    "performance": ["use", "fit", "Symbol", "~"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Parfois, je suis tout simplement impressionn√© par l'intelligence de chacun ici. Le texte, la v√©rit√©, les chiffres : ce sont des id√©es tellement puissantes !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?‚Ä¶ You know how I was telling you that they can evaluate any function with parentheses \\1.add(1)\\ but also two input functions with infix operators \\1 + 1\\? Well, they have one more trick for functions with only one input: the unary format."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?There are only a few of these, but they are powerful. One is really relevant to @Number: negation. You can just put a \\-\\ in front of any number value and get its negative."
                        ],
                        ["edit", "-(1 + 3)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?That little minus sign is the same as saying \\(1 + 3).negate()\\ but so much more elegant."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?The other one is similar but for negating \\‚ä§\\ and \\‚ä•\\: it's like a little squiggle minus \\~\\ that just flips true to false and false to true. For example, this little expression evaluates \\‚ä§ | ‚ä•\\, which is \\‚ä§\\, then flips the \\‚ä§\\ to \\‚ä•\\. This is the same as saying \\(‚ä§ | ‚ä•).not()\\ but so much more sleek."
                        ],
                        ["edit", "~(‚ä§ | ‚ä•)"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?Isn't that just beautiful? The way that @Evaluate can take so many different forms but really all be the same idea? They don't even see it‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "$~Vide",
                    "subtitle": "$~Rien",
                    "concept": "None",
                    "performance": [
                        "fix",
                        "Phrase('√∏' size: 5m place: Motion(velocity: Velocity(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Do you think you're okay meeting just one more value? Let's go find @None next. They are a bit more chill than @Number. @None? Are you out there?"
                        ],
                        ["None", "bored", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Nous t'avons trouv√© ! Tu sembles aller bien. Comment vas-tu avec tout ce silence ?"
                        ],
                        ["None", "excited", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~C'est logique. Je comprends pourquoi tu aimes le calme. C'est certainement paisible. Je voulais te pr√©senter √† mon nouvel ami et r√©alisateur potentiel. Ils sont int√©ress√©s √† nous inspirer."
                        ],
                        ["None", "eager", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Oui, je pense qu'ils ont toutes sortes d'id√©es. Nous n'en avons pas encore parl√©, mais nous avons tout le temps. Nous sommes en train d'apprendre. Voulez-vous partager ce que vous faites ? (Je peux traduire)."
                        ],
                        ["None", "serious", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils ne repr√©sentent rien. Ils sont diff√©rents du z√©ro dans le sens o√π on ne peut rien y ajouter ni en soustraire. Juste‚Ä¶ rien."
                        ],
                        ["None", "serious", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils disent qu'ils aiment occuper l'espace o√π quelque chose pourrait se trouver. Parfois, ils repr√©sentent l'absence de choix dans un jeu, parfois ils repr√©sentent une entr√©e par d√©faut dans une fonction. En ce sens, ils peuvent repr√©senter l'absence de quoi que ce soit."
                        ],
                        ["None", "neutral", "$~‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?They wanted you to know that they don't really do anything. They just are. All they really do is say whether they are themselves. If they are, they evaluate to \\‚ä§\\ and \\‚ä•\\ otherwise."
                        ],
                        ["edit", "√∏ = √∏"],
                        null,
                        ["edit", "Phrase('hi' face: √∏)"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Do you remember @Phrase? @Phrase actually works with @None a lot. Most of the inputs that @Evaluate mentioned are \\√∏\\ by default, which for @Phrase means that no size, font, color, etc. are specified."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Y a-t-il autre chose que vous souhaitez partager avec notre r√©alisateur en herbe ?"
                        ],
                        ["None", "eager", "$~‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils pensent que tu te d√©brouilles tr√®s bien ! Et je pense que tu te d√©brouilles tr√®s bien aussi. Tu as d√©j√† rencontr√© beaucoup de nos merveilleux joueurs. Et il y en a encore beaucoup d'autres √† rencontrer..."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Ensembles",
            "performance": [
                "fit",
                "Group(Row('|' (Time() √∑ 500).sin() ¬∑ 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "$~Valeurs communautaires",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' ¬∑ (Time() √∑ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You know what? The values in our community are just so different. @Text with their immense worlds of culture from the people world‚Ä¶ @Boolean with their binary visions of the world‚Ä¶ @Number with their endless fascination with counting things‚Ä¶ @None with their quiet way of observing the absence of things‚Ä¶ Our world is never boring!"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('‚ä§‚ä•') Phrase('#') Phrase('√∏')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?You might wonder how they get along with each other in a group. Well, there's a whole other set of folks in the Verse that are all about bringing values together in groups. We call them *collections*. Collections are *values* too; they're just made up of smaller values or even other collections. For example, you might have a list of @Text, a set of @Number, or even a list of lists."
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('‚ä§') Phrase('42') Phrase('√∏') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Do you want to meet them? Let's start with @List first‚Ä¶ they're the first collection I met and probably the most visible in our community since they're so useful in organizing other values for performances."
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "$~Des lieux, tout le monde !",
                    "subtitle": "$~Listes",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Hiya, @List! Are you around? I have someone I'd like you to meet."
                        ],
                        [
                            "List",
                            "curious",
                            "$?@FunctionDefinition? Is that you?"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui ! C'est moi. √áa fait si longtemps !"
                        ],
                        [
                            "List",
                            "curious",
                            "$~C'est vrai. Jour apr√®s jour, nuit apr√®s nuit, personne. Mais tu es l√†. Comment ? Raconte-moi ce qui s'est pass√©, dans l'ordre !"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Well, I was sitting around, as I usually do, trying to imagine functions to compute, but I was just blocked. And then my new friend here showed up, curious about our world and wanting to learn more and maybe even be our next director. And so we talked to @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, @Text, @Number, @Boolean, and @None, waking everyone up. That's why we're here: to talk about what you do and our next performance!"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        [
                            "List",
                            "excited",
                            "$~C'est incroyable ! C'est super de te rencontrer, nouveau directeur."
                        ],
                        [
                            "List",
                            "excited",
                            "$~Tu veux savoir ce que je fais ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ouais, dis-leur !"
                        ],
                        null,
                        [
                            "List",
                            "excited",
                            "$~Ok. Tout d'abord, et c'est le plus important, je mets les valeurs dans l'ordre. Quelles que soient les expressions que vous souhaitez : nombres, mots, autres listes, je peux tout regrouper en s√©quence.",
                            "$~Par exemple, regardez cette liste amusante. Avez-vous d√©j√† vu quelque chose de semblable ? C'est tellement beau ! Les dix premiers chiffres, dans l'ordre."
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "$?Second, and this is serious, I always start with \\[\\ and end with \\]\\. That's how I know the beginning and end of my list. THEY MUST ALWAYS GO IN THIS ORDER. No \\]\\ first, no \\[\\ last; that's WRONG. Do you see how confusing things get? Can you fix this one?"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~Celui-ci est cass√© aussi. Peux-tu le r√©parer ?"
                        ],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "$~Parfois, les gens oublient cela, et alors il y a des parenth√®ses qui flottent toutes seules, et ils n'aiment pas √ßa, et alors les valeurs deviennent folles sans aucun ordre, et c'est le CHAOS. Je n'aime pas √ßa."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~C'est bon. Nous aimons que vous aimiez l'ordre ; c'est ce qui vous rend sp√©cial !"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "$~J'aime le fait que j'aime aussi l'ordre ! Bon, o√π en √©tais-je ? Oui, troisi√®mement, et c'est aussi essentiel, PAS DE VIRGULE ! Je sais que dans certaines cultures, les gens aiment mettre des virgules entre les √©l√©ments des listes, mais je ne les aime pas. Ce sont juste de petits morceaux de d√©chets qui g√™nent mes √©l√©gants classements, et les gens les oublient toujours. Si vous avez du mal √† voir les limites entre les expressions, ajoutez simplement un saut de ligne. Peut-√™tre pourriez-vous vous d√©barrasser de ces choses emb√™tantes ? Mettez des sauts de ligne si vous le souhaitez. N'importe quoi d'autre que des virgules. D√©go√ªtant !"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?@List, one of the things I like most about you is how amazing you are at manipulating lists. Do you want to show our student director here some examples?"
                        ],
                        [
                            "List",
                            "neutral",
                            "$?Yes, but @FunctionDefinition, those are all your doing. You represent all these beautiful functions for me that enable me to do all kinds of things! Like @List/reverse ‚Äî oh, this one is wonderful and simple. It just takes my values and puts them in the opposite order."
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "$?And this one is fun: @List/sans just removes all of the values equal to the given value. See how there are no zeros left in the resulting list?"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "$?Ack, I can't believe I forgot to explain the fourth rule! Okay, rule number four: I never change a list. I only ever make new ones. No matter what function you evaluate on me, I always make a new list; I never change one. So the @List/reverse example above? That didn't change the list; it made a new list. And the sans example? That didn't remove the zeros from the original list; it made a new list without zeros. That's actually true for everything in the Verse: once values are made, they are who they are and do not change."
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "$?Oh, that reminds me of the last rule, rule number five: I start counting at 1! Not zero, not two, 1. So if you want to get the value at a particular place in a list, you can use two more \\[]\\ to make a @ListAccess and give the place you want. See how when I get \\3\\, I give the third value in the list, \\'c'\\? Try changing it to \\1\\ or \\5\\ and see what you get. And then maybe try \\0\\ or \\6\\‚Ä¶"
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "$?Interesting, huh? Give me a place in the list, and I will wrap around. For example, \\-1\\ is the last item in the list, and if the list has five items, then index \\6\\ is the first item. If you give me index \\0\\, then I'll give you @NoneLiteral because there's nothing there. Make sense?"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "$?Okay, maybe one list function, because this is my favorite. This one is called @List/random and will give a random value in the list. It's great fun because you never know what you're going to get! What did you get, what did you get? Try adding your own animal and see what you get."
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~List, tu es b√™te. Tu peux faire tellement d'autres choses sympas, je suis toujours impressionn√©e. Seras-tu l√† si notre nouvel ami directeur a des questions ?"
                        ],
                        [
                            "List",
                            "eager",
                            "$?Yes, of course, always! @FunctionDefinition made so many interesting things for me to do. Just let me know what you need!"
                        ]
                    ]
                },
                {
                    "title": "$~Un de chaque",
                    "subtitle": "$~Ensembles",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@List is so interesting. Their love of order is so endearing and so useful! I thought it might be interesting for you to meet their cousin @Set next, since they're so alike but different in some important ways. @Set? I have someone you'd like to meet."
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "$?Oh! @FunctionDefinition! It's you! What brings you here? Is the silence over? What happened? Are we putting on a show? What is it? Where is everyone?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?So many questions! I'm here to introduce you to someone who's considering directing. They're learning everything about the Verse and hope to share their inspiration with us! We were just talking to @List, but we were also talking to @Number, @Boolean, @Text, @Evaluate, and @Program earlier. We came to you next because we're meeting all the collections!"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "$~Oh, c'est tellement merveilleux de te rencontrer, toi, une nouvelle personne qui ressemble √† un r√©alisateur ! As-tu d√©j√† des id√©es ? Que va-t-on jouer ? Puis-je t'aider ? De quoi as-tu besoin de ma part ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Peut-√™tre que pour commencer, dites simplement ce que vous faites ?"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "$?Oh yes, of course. I collect things (Hm, obviously; I am a collection). But most importantly, I only collect **one of each kind** of thing. I can gather whatever you like and help you keep track of values, but I will never repeat a value. I like to arrange myself a little like @List but with \\{\\ and \\}\\ instead."
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "$~C'est un ensemble. Mais comme je l'ai dit, pas de doublons. Donc si tu me donnes √ßa, je vais me d√©barrasser des doublons."
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "$?Also like @List, you can work with @SetOrMapAccess to see if a value is contained in the set. You'll get either \\‚ä§\\ if it is or \\‚ä•\\ if it's not. Let's see if \\3\\ is missing from this set. Yep, not there! Try adding \\3\\ back to the set."
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@Set, are there other things you can do with set values?"
                        ],
                        [
                            "Set",
                            "eager",
                            "$~Oui, bien s√ªr, merci beaucoup. Que veux-tu me voir faire ? As-tu une performance en t√™te ? Comment puis-je aider ? Que puis-je faire ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Maybe, @Set/difference?"
                        ],
                        [
                            "Set",
                            "neutral",
                            "$?Yes, @Set/difference.",
                            "$?When evaluated on a set and given another set, it removes all of the items from the given set from the set evaluated on (Hm, those were some clumsy words, but that was what I meant). Here's an example. See how the result is just the set of \\{3}\\? That's the only value that remains after removing the values in \\{ 1 2 }\\."
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "$?You can also add and remove things from sets. This takes the set \\{1}\\, adds \\2\\ to it, then removes 1 from it, leaving \\{ 2 }\\."
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "$?There's lots more I can do thanks to @FunctionDefinition here. Come find me anytime you want to learn more!"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "$?Oh, and hey @FunctionDefinition, you said you saw @Evaluate?"
                        ],
                        ["FunctionDefinition", "sad", "$~Oui, je l'ai fait."],
                        null,
                        ["Set", "curious", "$~Comment vont-ils ?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Ils vont bien. Nous allons bien. Je pense‚Ä¶ Je ne sais pas. Peut-√™tre que √ßa fait trop longtemps que nous n'avons pas dans√© ensemble. Quand je suis avec eux, j'ai l'impression qu'ils ne se voient pas, et donc ils ne me voient pas."
                        ],
                        [
                            "Set",
                            "curious",
                            "$~Cela semble √™tre une p√©riode difficile pour vous aussi. Peut-√™tre qu'avec notre nouveau directeur, nous danserons √† nouveau et que vous trouverez tous les deux une solution."
                        ]
                    ]
                },
                {
                    "title": "$~Un √† un",
                    "subtitle": "$~Cartographies",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?There's just one more collection I'd like to introduce you to. They're a bit like @Set in some ways and even use the same braces, but they're different in one important way: they're a connector. Their name is @Map."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@Map? Are you out there? The silence is breaking!"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$?Breaking? Was it ever really silent? It's so good to see you, @FunctionDefinition. Oh my, have you talked to @Evaluate? They were not in good shape last time we talked. You have to talk to them."
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Oui, je leur ai parl√©..."
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~Oh, bien. Bon, parce qu'il y a des r√©parations √† faire l√†, mon ami... Comment vas-tu ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je vais bien, juste un peu seul et je m'ennuie beaucoup."
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "$?Oh, I'm so sorry to hear that. I've been staying connected with everyone during the silence and just figured you and @Evaluate had each other! I really would have been happy to talk any time. I've just been so busy keeping up with the gossip between @List and @Set and that weird tension between @Conditional and @BooleanLiteral. Do you know what's going on between them?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Non, pas du tout. Il y a des tensions ? Et quels ragots ?"
                        ],
                        [
                            "Map",
                            "kind",
                            "$?Kind of like the tension between you and @Evaluate?"
                        ],
                        ["FunctionDefinition", "sad", "$~‚Ä¶"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~D√©sol√©. Peut-√™tre pas devant notre invit√©e ici. Vous devez √™tre la nouvelle personne dont tout le monde parle. J'ai entendu dire que vous alliez √™tre notre nouveau directeur ? Quelles id√©es fabuleuses nous r√©servez-vous ? Du chant ? De la danse ? Du moment que c'est lumineux, ludique et √©trange, je suis l√† pour √ßa !"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Pas besoin de leur mettre la pression ! Je suis s√ªr qu'ils ont plein d'id√©es. Nous essayons juste de cr√©er un espace pour apprendre et nous connecter avant de d√©terminer le premier spectacle. Pouvez-vous nous dire ce que vous faites ?"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "$?I connect! I'm kind of like a dictionary: give me a value and I'll give you the definition it corresponds to. @FunctionDefinition told you about values? I map them, one to one, from one value to another. Give me a key; I'll give you the value it corresponds to. For example, here's a mapping from names to a point tally. Names are the key; points are the value."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "$?But like @Set, I don't like duplicates. You can't have more than one of the same key, but you can have as many unique keys mapped to equivalent values as you like. For example, this gives me two \\'ben'\\ keys, but I just use the last one. But it's okay that \\'ben'\\ and \\'joe'\\ have the same number of points because they're different keys."
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "$?It's my partnership with @Bind that makes me special! It's how I connect values to other values (Have you met @Bind yet? No? Ohhhh, you're going to adore them. They are FABULOUS.)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@Map, what if you want an empty mapping? How is that different from an empty set, \\{}\\?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$?Oh, that's just me all by myself! Little @Bind and I just hang out, no keys or values."
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?And what if our director doesn't provide a value or a key? Like this? Like, \\3\\ has no value?"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "$~Oh‚Ä¶ NE FAITES PAS √ßa. Je n'aime que les paires. 3 est-il une cl√© ? Une valeur ? Compl√®tement d√©routant. Arr√™tez le spectacle."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Et si notre r√©alisateur veut obtenir une valeur √† partir d'une cl√© ?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$?Just like @Set: just put a \\{}\\ after a map and give me the key you want."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$?And if I don't have a key, I'll give you @None."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'anna'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$?You might want to use our friend @Otherwise if you'd rather treat a @None as something else.",
                            "$?Here, for example, we default to \\0points\\ if there's no value."
                        ],
                        [
                            "edit",
                            "map: { 'ben': 2points 'joe': 5points 'kate': 12points }\nmap{'anna'} ?? 0points"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "$?Otherwise, I'm a lot like @Set: I can do a lot of the same functions. Stop by any time, and I'll be happy to show you more!"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Thank you, @Map! /You/ are fabulous."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~F√™te de casting",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity‚Ä¢#m/s^2: 15m/s^2",
                "",
                "Stage(count ‚Üí [].translate(",
                "   ∆í(_) ",
                "       Phrase(",
                "           '‚Üí?' ‚Üí [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) ¬∑ 1m/s angle: Random(0 360) ¬∑ 1¬∞/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "$~DEVIATION",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Je n'arrive pas √† croire combien de personnages nous avons rencontr√©s jusqu'√† pr√©sent. Est-ce que √ßa fait beaucoup ? J'ai aussi l'impression que nous n'avons pratiquement pas progress√©.",
                            "$~Je n'ai m√™me pas encore eu le temps de vous montrer les parties les plus excitantes de la mise en place d'un spectacle !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Cela vous d√©rangerait-il si nous nous arr√™tions pour rencontrer deux autres personnes avant de passer aux parties vraiment passionnantes ? Ces deux personnages sont tellement essentiels au travail avec les valeurs et en particulier le texte ; nous devons simplement en parler avant de passer aux choses plus spectaculaires."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Quels sont-ils?",
                            "$~Les conversions. Elles sont l'alchimie de ce monde qui permet de changer un type de valeur en un autre. Allons √† leur rencontre."
                        ]
                    ]
                },
                {
                    "title": "$~Nous pouvons √™tre n'importe quoi",
                    "subtitle": "$~Convertir",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "‚Üí"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Hey, @Convert! You there?"
                        ],
                        [
                            "Convert",
                            "happy",
                            "$?Duuuuude, @FunctionDefinition, it's been epochs! You're looking stylish. It's been super quiet lately, hasn't it? You have a new friend?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Yes, this person here is interested in directing. We're on the grand tour ‚Äî we've met @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, and all the values and collections. I figured that meeting you next would be perfect since you work so closely with values."
                        ],
                        [
                            "Convert",
                            "kind",
                            "$~Eh bien oui, les valeurs sont mes meilleures amies. Nous aimons faire du parkour le week-end, ou des spectacles, ou autre."
                        ],
                        null,
                        ["FunctionDefinition", "curious", "$~Parkour ?"],
                        [
                            "Convert",
                            "serious",
                            "$~Ouais, tu sais, comme la gymnastique dans la rue, sauter par-dessus des objets, enjamber des b√¢timents ‚Äì comme un truc sur un fil de fer, mais sans fil. Des sauts courageux !"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ohhh, je vois ce que tu veux dire. Oui, je suppose que ce que tu fais ressemble un peu au parkour. Je ne suis pas s√ªr que notre nouvel ami r√©alisateur suive, cependant. Peux-tu expliquer sans les m√©taphores ?"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~Avec plaisir, mon fr√®re. Imagine que tu aies un num√©ro."
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$?And imagine you wanted it to be text. Throw me in there with @Text and BAM, you've got text!"
                        ],
                        ["edit", "1 ‚Üí ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$?Or like, imagine you had text and wanted a number. Throw me in there with @Number and POP, you've got a number!"
                        ],
                        ["edit", "'1'‚Üí#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "$?But you want to see some, like, serious mojo? Say you've got some text and you want its characters in a list. Throw me in there with @List and HAAAAAA, you've got a list of letters."
                        ],
                        ["edit", "'halloween'‚Üí[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$?But me and @Number? We have been practicing some seriously sick tricks. Say you've got some time in days and you want seconds? We got you."
                        ],
                        ["edit", "5day ‚Üí #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "$~Mais le vrai truc du diable ? L'encha√Ænement. Comme plusieurs conversions √† la suite. Regardez celle-ci. Des jours aux secondes, du texte √† la liste, le tout dans une seule cha√Æne. Maintenant, nous avons une liste de chiffres. G√©nial !"
                        ],
                        ["edit", "1day ‚Üí #s ‚Üí '' ‚Üí []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "$~Donc, mon principe est que tout doit √™tre tout, sans limites. Tout peut √™tre n'importe quoi (genre, pas n'importe quoi, mais vous savez, autant que je peux).",
                            "$~Mais pourquoi quelque chose devrait-il √™tre enferm√© dans une seule identit√©, tu sais ? La lib√©ration, mec."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?That is amazing, @Convert, and so inspiring. But anything, really?"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$?Well, not like, anything. I mean, if you give me seconds and ask for a @Set, like, what does that even mean?",
                            "$?I'll do my best to find a way... like, here, I know how to turn numbers into @Text and @Text into a @Set, so I'll give you the set of symbols in the text form of this number.",
                            "$~Mais ce n‚Äôest probablement pas ce que vous vouliez‚Ä¶",
                            "$~Et si je ne sais pas comment vous donner ce que vous avez demand√©, je vais tout arr√™ter."
                        ],
                        ["edit", "10s ‚Üí {}"],
                        null,
                        ["use", "fit", "Symbol", "üìï"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~D'accord, c'est logique. Il n'y a donc que quelques conversions, pas toutes les conversions possibles."
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~Ouais‚Ä¶ vous pouvez toujours v√©rifier un type de valeur et voir quels types de conversions ils prennent en charge."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üßê"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Did you know that @Convert and @Evaluate are related? They're like cousins. @Evaluate will evaluate any function, but @Convert will evaluate any conversion. In a way, @Evaluate does conversion too, from inputs to outputs."
                        ],
                        [
                            "Convert",
                            "scared",
                            "$?Whoa. I never thought of it that way. Like, /I/ convert inputs to outputs, and @Evaluate converts inputs to outputs. And like, @FunctionDefinition, you *tell us* how to convert inputs to outputs. Is that like, the secret of the Verse?",
                            "$~Comme si tout √©tait une question de conversion d‚Äôentr√©es en sorties ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Je crois que oui?"
                        ],
                        ["Convert", "surprised", "$~ü§Ø"],
                        ["edit", "Phrase('ü§Ø')"],
                        null,
                        ["use", "fit", "Symbol", "ü§Ø"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Convert, how should our new director find out what kinds of conversions are possible?"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$?Sorry, bro, I'm still a bit shaken. Uhhh, they can check out any of the value types in the reference @UI/docsExpand.",
                            "$~Il devrait y avoir une liste des autres types dans lesquels je peux les transformer‚Ä¶ Tout est une conversion‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?It was so great to see you, @Convert! We're going to head out and meet the others. See you soon?"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "$~Bient√¥t. Ouais‚Ä¶ Oui ! Compl√®tement, oui."
                        ]
                    ]
                },
                {
                    "title": "$~Comment choisir ?",
                    "subtitle": "$~D√©cisions",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?We've met so many kinds of values on our journey so far and talked about so many ways of working with them. There's just one more I wanted to introduce you to. They're particularly special because they're what make our performances so dynamic. They're called @Conditional, and they are the central character in the Verse that makes *decisions*."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Pour √™tre clair, ce ne sont pas toutes les d√©cisions qui comptent : j'ai ma propre vie et ils ont la leur. Mais dans une performance, quand nous essayons de d√©cider ce que nous allons faire ensuite sur sc√®ne, c'est √† eux de suivre vos conseils en tant que metteur en sc√®ne et de d√©cider quoi faire. Ils sont donc un partenaire essentiel pour cr√©er des performances passionnantes."
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@Conditional, the silence is breaking! We might put on shows again!"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$?@FunctionDefinition? The silence is breaking? What is silence? How does one break it? Are we ever really silent? Who is this person? Are they the one breaking it?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Yes, the silence is breaking, and they are the one! They're a person, and they came to inspire us and direct our shows. We've been talking about conversions and meeting all the values, and @Text and @Convert and I wanted them to meet you! In a way, you're the most special of conversions because you enable us to convert situations to new values."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Est-ce que je le fais ?",
                            "$~Je prends des d√©cisions, mais ce que je fais en r√©alit√©, c'est encoder les d√©cisions que les r√©alisateurs me demandent de prendre. Est-ce donc vraiment moi qui prends les d√©cisions ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je pense que oui. C'est plut√¥t comme si le r√©alisateur codait la d√©cision, mais vous la d√©l√©guait ensuite. Vous devenez le d√©cideur. Voulez-vous montrer un exemple ?"
                        ],
                        ["Conditional", "curious", "$~Comme √ßa?"],
                        ["conflict", "_‚Ä¢? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui, exactement comme √ßa !",
                            "$?Do you see how there's four parts to @Conditional's format? There's a *condition* first, which needs to be a @Boolean. Then there's \\?\\. Then there's *yes* expression, then a *no* expression. What @Conditional does is evaluate the condition, and if it's \\‚ä§\\, they evaluate the *yes* expression. Otherwise, they evaluate the /no/ expression. It's such a powerful way of deciding!"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Pouvez-vous nous donner un exemple plus pr√©cis ?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Quelque chose comme √ßa ?"
                        ],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Euh, hm. Je suppose que c'est une d√©cision, mais c'est une mauvaise d√©cision. Un n'est pas moins que cinq. Je suppose que vos d√©cisions ne sont pas toujours bonnes, mais elles sont fiables, n'est-ce pas ?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$?Reliable? Maybe? If you accept that I just decide whatever the director tells me, then yes, but what if the director tells me this? Is it really a decision if the number can never be greater than \\3\\?"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Hm, je suppose que c'est une bonne remarque. Je suppose que le fait qu'une chose soit une d√©cision d√©pend beaucoup de la d√©cision du r√©alisateur. Je suppose que cela signifie que le r√©alisateur doit r√©fl√©chir assez attentivement aux d√©cisions qu'il vous donne ?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$?Carefully? Skeptical, maybe? Have you thought about my good friends @BooleanLiteral? How is their view of the world possibly enough to represent all of the decisions we might want to make? What if, for example, we wanted a performance that took someone's name and decided if it was beautiful or not? Is that a true or false decision? Is that even a decision we should make? Doesn't it seem awfully reductive and biased?",
                            "$~Directeur, selon vous, quelles lettres rendent un nom beau ?"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$?And think about the questions I answer ‚Äî why can I only respond to \\‚ä§\\ and \\‚ä•\\? Why not a number? Don't I have a right to decide if \\1\\ is beautiful?"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$?I guess I never really thought about it that way. But @Conditional, even if you have limitations, you are beautiful. You enable us to do so much in our performances that we couldn't do otherwise. You make so much joy and laughter possible. Our director hasn't even seen the amazing things you're capable of yet."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Tu penses vraiment √ßa ?",
                            "$~Que je suis belle ? Peut-√™tre que ces limites valent encore la peine ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils le sont absolument.",
                            "$~Et je suis ravi de montrer √† notre nouvel ami ici pr√©sent √† quel point il vaut la peine d'√™tre vu. Seras-tu l√† quand je le ferai ?"
                        ],
                        [
                            "Conditional",
                            "happy",
                            "$~Y a-t-il quelque chose qui pourrait me rendre plus heureux ?"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Changement de sc√®ne",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "$~Saisir",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() ¬∑ 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Saviez-vous que votre monde et le n√¥tre sont connect√©s ? Faites un son et nous pourrons l'entendre..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Vous ne saviez pas que le Verset existait, mais nous savons que le v√¥tre existe. Parce que c'est votre monde qui rend notre monde int√©ressant.",
                            "$~Vous l'avez probablement remarqu√© au fur et √† mesure que nous avons parcouru et rencontr√© toutes les valeurs, collections et conversations.",
                            "$~Que signifient ces valeurs si personne ne leur donne un sens ou ne leur fournit ces valeurs en premier lieu ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je veux vous montrer le lien entre nos mondes et ce qu'ils rendent possible. Nous les appelons des **flux d'entr√©e**, et ils sont peut-√™tre le type d'entr√©e le plus magique du Vers. Ils sont comme des fonctions qui cr√©ent un type sp√©cial de valeur qui change √† mesure que votre monde change. Ils ne peuvent pas non plus communiquer de la mani√®re √† laquelle vous √™tes habitu√©. Ils ressemblent davantage √† des battements de c≈ìur d'un autre monde. Je vais donc faire de mon mieux pour expliquer comment ils fonctionnent, car ils ne pourront pas s'expliquer eux-m√™mes.",
                            "$~Etes-vous pr√™t √† en rencontrer un ?"
                        ]
                    ]
                },
                {
                    "title": "$~Tic, tic, tic...",
                    "subtitle": "$~Temps",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "üï¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Let's start with the most elemental stream of all: @Time. To make a stream, we use @Evaluate and give the name of the type of stream you want."
                        ],
                        ["Time", "neutral", "$~tic tic tic tic tic‚Ä¶"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Do you see how time is changing? Streams are a series of values. Every time a stream gets a new value, @Program reevaluates with the new stream value. That's why this program just keeps counting up: we made a time stream that starts at time 0 milliseconds and then just keeps updating every time its clock ticks. This time is your time, from your world."
                        ],
                        ["Time", "neutral", "$~tic tic tic tic tic‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?See that \\1000ms\\? It's a @Time/frequency that tells @Time to tick every 1000 milliseconds instead of the default of every 33 milliseconds, its default. Now it's like a counter that ticks every second. These inputs that @Time takes are like a configuration: they tell the stream how to behave."
                        ],
                        ["Time", "neutral", "$~tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?But we can use all of the wonderful characters we've met to transform time further. For example, what if we wanted to know if time was a multiple of \\2\\? We could use @Number/remainder, which gets the remainder of a division. If the remainder is zero, we'll evaluate to \\‚ä§\\ and \\‚ä•\\ otherwise. See how it changes back and forth between \\‚ä§\\ and \\‚ä•\\? It's so magical."
                        ],
                        ["Time", "neutral", "$~tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶"],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?There's another thing you might have noticed: there's an area below the output that is a timeline. It updates each time the program reevaluates, which is each time a stream changes. It's showing every time @Time ticks."
                        ],
                        ["Time", "neutral", "$~tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Try dragging on the timeline @UI/timeline by using the timeline buttons, using the arrow keys with the timeline focused, or pressing the ‚è∏Ô∏è and ‚ñ∂Ô∏è @UI/playToggle buttons. You can go backwards in time to see previous evaluations. The dashed arrows step to previous and future stream inputs. The solid ones step between different steps of the program. Try navigating time and seeing what the program shows. This is how you can see all of the beautiful expressions you've learned about being evaluated by @Evaluate, one step at a time, resulting in the final value that @Program displays on stage."
                        ],
                        ["Time", "neutral", "$~tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶ tic‚Ä¶"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@Time is an interesting stream because it can be used for many different things: keeping track of how long a performance has been happening, timing some event, animating a word. It's one of the most flexible streams but also one of the most abstract."
                        ]
                    ]
                },
                {
                    "title": "$~Clic-clac",
                    "subtitle": "$~Cl√©",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "‚å®Ô∏è"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('‚å®Ô∏è' resting:Sequence({0%: Pose(rotation: -5¬∞) 25%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 5¬∞) 75%: Pose(rotation: 0¬∞) 100%: Pose(rotation: -5¬∞)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?If I'm not mistaken, there's a thing in your world called a ‚Äúkeyboard‚Äù? It's a way of selecting which one of us you want to appear in your documents, right? Well in the Verse, we receive these requests as a stream of text, each text value representing the key that was pressed. We use these to listen to what people in your world are typing. This stream is called @Key."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Here's a simple example. Click the stage or focus it with the keyboard and then press any keyboard key. You'll see the key you've typed appear by name. That's because each time the key stream changes, @Program evaluates the key stream as its latest value and then shows it on stage."
                        ],
                        ["Key", "neutral", "$~clic clic clic"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?This stream will change any time any key is pressed. But you can tell a key stream to just change when a particular key is pressed. See how the stream changes to \\a\\ the first time but then doesn't change after? That's because this stream only changes when \\a\\ is pressed, so it's always showing \\a\\. But you'll always see the new key value appear in the timeline."
                        ],
                        ["Key", "neutral", "$~clic 'a'‚Ä¶"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Sometimes it's helpful to know when a key is released, instead of pressed. Just pass \\‚ä•\\ to tell the @Key stream that you to know when a key is released instead of pressed. Now, press and hold the 'a' key and then when you release, you'll see the 'a' appear on stage. Didn't catch it? Press the ‚Üª button to reset the performance and try it again."
                        ],
                        ["Key", "neutral", "$~clic 'a'‚Ä¶"],
                        ["edit", "Key('a' ‚ä•)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@Key streams are really helpful when you want a performance to react to keys that the audience presses. For example, you could check if a key has the word 'Arrow' in it to decide if an arrow key was pressed. Press an arrow key and you'll see \\'move'\\; press something else and you'll see \\'stay'\\"
                        ],
                        ["Key", "neutral", "$~¬´ Fl√®che ¬ª cliquable‚Ä¶"],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "$~Hummmmmm‚Ä¶",
                    "subtitle": "$~Aiguille",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "üëÜüèª"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('üëÜüèª' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?You also have something called a 'mouse' in your world, and 'trackpads', and 'touchscreens'? These appear in our world as streams @Pointer, which is a stream of places on stage."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Move your pointer around the stage, and you'll see the stream of @Place change on stage."
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "$~wzzzzzzzzzz‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Voyons maintenant √ßa sur sc√®ne !"
                        ],
                        ["Pointer", "neutral", "$~wzzzzzzzzzz‚Ä¶"],
                        ["fix", "Phrase(Pointer()‚Üí'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?@Pointer can be fun if you want to link the @Place of a @Phrase to where the pointer is."
                        ],
                        ["fix", "Phrase('üê™' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "$~wzzzzzzzz‚Ä¶"]
                    ]
                },
                {
                    "title": "$~Et... maintenant !",
                    "subtitle": "$~Bouton",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "üñ±Ô∏è"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Button is like @Key but corresponds to the primary pointer button like a click or tap. It's just a stream of \\‚ä§\\, indicating when the pointer button is pressed down. Press that button and watch the events appear on the timeline."
                        ],
                        ["Button", "neutral", "$~Clique‚Ä¶ Clique‚Ä¶ Clique‚Ä¶"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You can configure it to only change to up or down by passing it a \\‚ä§\\ or \\‚ä•\\."
                        ],
                        ["Button", "neutral", "$~en bas‚Ä¶ en bas‚Ä¶ en bas‚Ä¶"],
                        ["edit", "Button(√∏)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Using a @Button stream is one way to advance through stages of a performance or to trigger some change in a performance. This little program lists to button presses and starts off showing sad, but when the @Button stream changes to true, @Conditional evaluates to \\'happy'\\ instead."
                        ],
                        ["edit", "Phrase(Button(√∏) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "$~Est-ce que quelqu'un √©coute ?",
                    "subtitle": "$~Volume",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "üé§"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Your world and our world also have sound. Did you know we can hear you with your consent? We listen with a stream called @Volume, which provides a low-level sequence of amplitudes. Your mic might ask for permission to be shared with us. Once you do, you'll see a number that corresponds to amplitude, between \\0\\ and \\100\\."
                        ],
                        ["Volume", "neutral", "$~bzzzZZZZZZzzzzzzZZZZ‚Ä¶"],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Volume can be used to make performances respond to sound from the audience. For example, here we could make a little amplitude visualization by converting the amplitude number from the stream to a certain number of \\'o'\\ characters. See how when you make noise, there are more \\'o'\\s? The @Volume amplitude is divided by \\10\\, putting it in the \\0\\ to \\10\\ range. Then, that value is given to @Text/repeat function, which repeats the \\'o'\\ the given number of times."
                        ],
                        ["Volume", "neutral", "$~bzzzZZZZZZzzzzzzZZZZ‚Ä¶"],
                        ["edit", "'o'.repeat(Volume() ¬∑ 10)"]
                    ]
                },
                {
                    "title": "$~On ne sait jamais‚Ä¶",
                    "subtitle": "$~Al√©atoire",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) √∑ 1ms) ‚Üí '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?There's one other source of input I want to show you. Remember \\[].random()\\ from earlier, from @List?",
                            "$?Inside, it uses a @FunctionDefinition called @Random, which provides an infinite sequence of random numbers. It's kind of a stream since it generates input from your world, not ours. But it's a bit different from the other streams in that it doesn't cause a @Program to reevaluate.",
                            "$~Au lieu de cela, chaque fois qu‚Äôil est √©valu√©, il donne un nombre al√©atoire diff√©rent.",
                            "$?See that little ‚Üª @UI/resetEvaluator button by the timeline? Press that to reevaluate the program manually, and you'll see a new number between \\0\\ and \\1\\ each time."
                        ],
                        ["Random", "neutral", "$~0,223423‚Ä¶ 0,823423‚Ä¶ 0,123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$?We can tell @Random the range of numbers we'd like by giving it a minimum and maximum number. This example gives numbers between \\1\\ and \\10\\:"
                        ],
                        ["Random", "neutral", "$~1‚Ä¶ 7‚Ä¶ 3‚Ä¶ 9‚Ä¶ 10‚Ä¶ 2‚Ä¶"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Random can be so fun! We can use it with streams to create fun chaos. For example, here we choose a random word from a list of words. This is the same as \\['kitty' 'cat' 'meowy'].random()\\. Keep pressing ‚Üª to get a different cat synonym! Try adding your own word to the list and see if you can get the word to appear."
                        ],
                        ["Random", "neutral", "$~1‚Ä¶ 2‚Ä¶ 2‚Ä¶ 1‚Ä¶ 3‚Ä¶"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "$~Bouge-moi",
                    "subtitle": "$~Placement",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Sometimes, it's nice to engage the audience in our place on @Stage.",
                            "$?@Placement is a great way to do that! It's a stream of @Place that responds to keyboard arrow keys, clicks, and taps.",
                            "$~Essayez de les utiliser pour d√©placer le hot-dog."
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il existe de nombreuses fa√ßons de le personnaliser. Par exemple, si vous souhaitez modifier la fa√ßon dont il se d√©place, vous pouvez lui attribuer une distance.",
                            "$?See how we gave it \\0.5\\ for the first input? Now, it moves a little less. Try changing it to a different number!"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement(depth: ‚ä§) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?You can also turn on and off movement on different axes. For example, give depth \\‚ä§\\ to allow movement on the z-axis.",
                            "$~Appuyez sur les touches + et - pour le rapprocher ou l'√©loigner du focus."
                        ]
                    ]
                },
                {
                    "title": "$~Rester en mouvement",
                    "subtitle": "$~Mouvement",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?So far, all of the *streams* we've talked about are sequences of simple values, like @Text or @Number. Some streams, however, can produce complex values.",
                            "$?@Motion is one of the most interesting of those. It makes a stream of @Place."
                        ],
                        null,
                        ["edit", "Phrase('üèÄ' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Here's the simplest way to use it. This creates a @Motion stream that starts with this @Phrase. It'll keep moving the ball based on *gravity*."
                        ],
                        ["Motion", "excited", "$~/Wouah‚Ä¶/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?But the ball keeps falling because there's no ground! We can put something called a @Shape on @Stage, like a @Rectangle. It takes two corners. We'll make it nice and thick.",
                            "$~Hm, il tombe √† travers le sol..."
                        ],
                        ["Motion", "excited", "$~/Wouah‚Ä¶/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Oh, right! That's because we forgot to give the ball @Matter. Matter is a way of telling us how heavy the @Output is, how bouncy it is, and how much friction it should have.",
                            "$~Rendons la balle vraiment rebondissante et l√©g√®re. Youpi, maintenant elle rebondit !"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('üèÄ' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?But @Motion has many other tricks.",
                            "$?For example, we can give it a start @Motion/velocity.",
                            "$~Cet exemple fait bouger la balle vers la droite et vers le haut et la fait tourner un peu au d√©but."
                        ],
                        ["Motion", "excited", "$~Youpi‚Ä¶"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('üèÄ' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?You can even change @Stage/gravity to be really extreme.",
                            "$~Essayez de le changer pour qu‚Äôil ressemble √† la lune, o√π la gravit√© est vraiment faible¬†!",
                            "$?Or try changing @Matter/mass or @Matter/bounciness, which affects how @Phrase bounce."
                        ],
                        ["Motion", "excited", "$~Wh‚Ä¶"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'üèÄ'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')‚Ä¢√∏ ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?It's even possible to know when some @Output bumps into another output with a related stream called @Collision.",
                            "$?We just need to give names to our two @Output. How about 'ball' and 'ground'?",
                            "$?Then, @Collision will give us a @Rebound when they touch and @None when they don't.",
                            "$~Faisons en sorte que la balle augmente √† chaque fois qu'elle touche le sol pour plus d'emphase !"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?There's so much more you can do with @Motion, @Collision, and @Shape!",
                            "$~J'esp√®re que vous essayerez beaucoup de choses rebondissantes."
                        ]
                    ]
                },
                {
                    "title": "$~Parlons-en",
                    "subtitle": "$~Chat",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('üó£Ô∏è')"],
                    "lines": [
                        ["fit", "Phrase('üó£Ô∏è')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Parfois, une performance est une interaction. Le public dit quelque chose et nous r√©pondons quelque chose.",
                            "$?That's what @Chat is for. When you use it, a little box will appear on stage for the audience to type in, and when they submit their message, @Text will be added to the stream for the program to respond to."
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Here's the simplest way to use it. You type something and then the stage shows it because the program's value is the @Chat's value."
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il est plus amusant de v√©rifier la valeur du message de discussion pour fa√ßonner la r√©ponse du programme. Ce petit exemple r√©pond √† tout message avec des o cons√©cutifs avec un bruit de train !"
                        ]
                    ]
                },
                {
                    "title": "$~Tu peux r√©p√©ter s'il te plait?",
                    "subtitle": "$~Page web",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('üõú')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il y a longtemps, nous avons entendu dire que vous aviez ce qu'on appelle Internet ? Je pense que c'est comme √ßa que vous √™tes ici, n'est-ce pas ?",
                            "$~Eh bien, nous avons pens√© que ce serait vraiment cool d'apporter des mots d'Internet /ici/, afin que vous puissiez jouer avec eux."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Here's how it works: you just give what I think is called a 'URL' to us, and if it's an HTML page, we'll pull all the phrases out of it and give it to you in a @List.",
                            "$~Comme ici : ce sont quelques phrases d'actualit√©."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous pouvez √©galement filtrer les mots avec ce que vous appelez, je crois, une requ√™te ¬´¬†CSS¬†¬ª¬†? Comme nous l'avons entendu, ¬´¬†h3¬†¬ª signifie ¬´¬†en-t√™te de niveau 3¬†¬ª, voici donc toutes les phrases dans les en-t√™tes de la page."
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords‚Ä¢[''] ? Group(Stack() words.subsequence(1 5).translate(∆í(word) Phrase(word resting: Sequence(spin() 1s)))) √∏"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Une fois que vous avez une liste de mots, vous pouvez en faire ce que vous voulez ! Comme par exemple prendre les cinq premiers et les transformer en phrases tournantes, bien s√ªr."
                        ]
                    ]
                },
                {
                    "title": "$~Au bon moment",
                    "subtitle": "$~R√©action",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "‚Ä¶"],
                    "lines": [
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 120¬∞))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?All of these streams that I've shown you come from your world. But sometimes, it's helpful to create streams of your own based on these other streams. That's where my friend @Reaction comes in! @Reaction, are you around?"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$?Yeah yeah yeah! It's @FunctionDefinition! How are you doing? Everything has been so‚Ä¶ constant lately. Have you noticed that?"
                        ],
                        null,
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 240¬∞))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu parles du silence ? Oui, rien n'a vraiment chang√©, n'est-ce pas, depuis que la derni√®re personne est partie ? Comment √ßa s'est pass√© pour toi ?"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "$~C'est vraiment √©trange, c'est vraiment √©trange. Toute ma vie a √©t√© consacr√©e au changement, j'ai toujours √©cout√© et observ√© les nouvelles id√©es des gens, les aidant √† les transformer en valeurs. Mais il n'y a eu rien. Jusqu'√† il y a un instant... Attendez... c'est une personne ?"
                        ],
                        null,
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 360¬∞))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Yes! This is our new potential director. I was just showing them @Time, @Key, @Pointer, @Button, @Volume, and @Random, so you probably noticed all the new inputs they were bringing from their world."
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~Ouiiiiiii, le changement arrive ! Puis-je vous montrer ce que je fais ?"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Oui, s'il vous pla√Æt, faites-le !"
                        ],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~Ok, donc j‚Äôai besoin de trois choses de votre part : une condition de changement, une valeur initiale et une valeur suivante.",
                            "$~La valeur *initiale* est la valeur que je dois d√©finir avant qu'un changement ne se produise. Il s'agit simplement d'une expression normale de toute sorte¬†!",
                            "$?Then you put \\‚Ä¶\\ after the initial value to tell me that the value can change.",
                            "$?After \\‚Ä¶\\, give me *condition* that evaluates to \\‚ä§\\ or \\‚ä•\\. It should generally check one or more streams ‚Äî otherwise, there's nothing changing, since the only source of change in a performance is streams.",
                            "$?Then put another \\‚Ä¶\\ after the condition to tell me that the value can change.",
                            "$~Enfin, la valeur *suivante* est la valeur que je dois d√©finir √† chaque fois que la condition change."
                        ],
                        ["conflict", "_ ‚Ä¶ _‚Ä¢? ‚Ä¶ _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$?Here's an example. See the @Key stream? Putting \\‚àÜ\\ before it asks, /Did this stream change?/ Before it changes, I evaluate to the initial value, \\1m\\. But when the space key is pressed, @Program reevaluates, and I evaluate to the *next* expression, which is \\1m\\ plus whatever the previous stream value was; that's represented by \\.\\. This adds \\1m\\ to the size of the phrase, making the word get bigger and bigger."
                        ],
                        ["fit", "Phrase('hi' size: 1m ‚Ä¶ ‚àÜ Key(' ') ‚Ä¶ 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Reaction, that is so cool. Do you want to introduce @Changed? You seem to work with them closely."
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$?Yes, @Changed and I are best buddies! They help me know when something has changed. They're like a stream whisperer, listening closely to the director's world‚Ä¶"
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "$~Wow, stream whisperer, √ßa semble un peu extr√™me..."
                        ],
                        [
                            "Reaction",
                            "serious",
                            "$?Oh hi, @Changed! Do you want to say more about what you do?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~Je veux dire, je vous dis simplement si un flux a chang√©. Donnez-moi un flux et je v√©rifierai. C'est tout."
                        ],
                        [
                            "Reaction",
                            "confused",
                            "$~Eh bien, c'est plus que √ßa, n'est-ce pas ?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~Pas vraiment. C'est un peu √ßa. Je veux dire, je suis bon dans ce domaine, mais c'est mon seul truc."
                        ],
                        ["Reaction", "confused", "$~‚Ä¶"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "$?Okay. Well, I think you're more important than that. Because I'm pretty useless without you! For example, if you give me a condition that doesn't check a stream, I'm never going to create a new value. Like here, the condition a @Boolean from @Button, but without you, I only ever change with the button ."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m ‚Ä¶ Key(' ') = ' ' ‚Ä¶ 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Oh, that makes sense. And @Reaction, you work with any stream?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~Oui, n'importe quel flux ! Et en fait, m√™me moi. Donc si vous faites une r√©action et que vous voulez faire une r√©action qui r√©agit √† sa r√©action, vous pouvez le faire aussi. Mais nous ne nous en soucierons pas maintenant, car cela n'arrive g√©n√©ralement pas dans les performances simples."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Thank you, @Reaction. Will you be around to help as I show our director the rest of our beautiful Verse?"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "$~Oui, bien s√ªr, √† tout moment. J'ai h√¢te de voir vos inspirations !!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Montez sur sc√®ne",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "$~Sortir",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "üòÄ"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Alors, qu'est-ce que tu en penses jusqu'√† pr√©sent ? Je pense que le Verse est plut√¥t sympa, surtout parce que les personnages qui le composent sont vraiment sympas. Tout le monde est vraiment sp√©cial !"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ü•±"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu t'ennuies ? Oh mon Dieu. Je pensais que tout cela serait si int√©ressant ! Qu'esp√©rais-tu ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üò¥"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Je vois. Le texte, les nombres, les listes et les flux sont ennuyeux. Je suppose que je ne vous ai pas vraiment montr√© tout ce que nous pouvons faire avec tout cela. Il est peut-√™tre temps que nous commencions √† parler de r√©sultats."
                        ],
                        null,
                        ["use", "fit", "Symbol", "ü§ó"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You've seen a lot of output already. Every time @Program evaluates, it results in a value and @Program shows that value on stage. But so far you've only seen things like numbers, text, lists. I get it, you just want to see full performances, just like we do!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üí¨"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?Remember that output I showed you a long time ago, @Phrase? That's where the performances really begin. Let's start there! And then I'll show you ways of building ever more interesting performances from that building block. Let me introduce you!"
                        ]
                    ]
                },
                {
                    "title": "$~Tu peux r√©p√©ter s'il te plait?",
                    "subtitle": "$~Phrase",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "üí¨"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@Phrase? Are you out there?"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "$~Sois fi√®re de toi, ma ch√©rie. Comment vas-tu ? Tu es tellement glamour aujourd'hui ! J'adorerais te voir sur sc√®ne un de ces jours."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Oh, la sc√®ne n'est pas pour moi ; je suis plus qu'heureux d'√™tre dans les coulisses, √† bricoler le d√©cor."
                        ],
                        [
                            "Phrase",
                            "curious",
                            "$~Ne soyez pas modeste, vous √™tes tout aussi fabuleux que moi. Il vous suffit d'un peu de couleur, d'une police flatteuse et vous serez merveilleux. Vous avez tant √† partager ! √Ä ce propos, nous n'avons pas fait de spectacle depuis une √©ternit√©, n'est-ce pas ? Est-ce que c'√©tait calme ? Vous savez √† quel point je me parle √† moi-m√™me ; je ne peux jamais le dire."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?It has been quiet. Ever since our last director left, it's been a void. But that is changing! We have a new person! We've been meeting the whole family: @Program, @ExpressionPlaceholder, @Evaluate, all the values, all the collections. We just spent time with all of the streams too, and @Reaction and @Conditional. I'm starting to feel things, hum. But I haven't introduced our new director here to much about what you do on stage? This is so your world and not mine; I figured we'd come to you first."
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~Eh bien, vous √™tes au bon endroit. J'adore parler de tout ce qui touche √† la vie sur sc√®ne. J'ai h√¢te de vous montrer toutes les petites choses merveilleuses que nous faisons ici sur sc√®ne !"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Que le spectacle commence !"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~Alors je sais que vous m'avez vu faire √ßa."
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$?That, my darling, is the simplest way to get a word on stage. But there's so much more! For example, did you know that you can style the text you give me by working with @FormattedTranslation? You haven't met them yet, but all you have to do is put special symbols around your text. Behold: bold!"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Pas assez d'impertinence pour vous ? Que diriez-vous de souligner, d'italique, de texte l√©ger et de texte extra gras *tout √† la fois* ?"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ üí¨!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Toujours pas impressionn√© ?",
                            "$~M√©langez-les tous ensemble !"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ üí¨!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$?And if you ever want to use any of these special formatting characters as text instead of formatting, you can just repeat them, kind of like in @Text, and I'll just use the character literally."
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$?But I can do more than just style text. For example, I can take a @Phrase/size measured in meters \\m\\. Try changing the size to any size you like!"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$?That size can be any expression. For example, say we wanted it to grow as @Time ticks. We can take time, multiply it by a fraction of a meter, and glorious, tick tick tick, hi hi hi. Try changing the frequency or the multiplier. See what beautiful growth you can create!"
                        ],
                        ["fit", "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$?Do you like costumes? I loooooove costumes. My @Phrase/face is a costume. Pick any of the supported faces to spice up the word you've chosen."
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$?Need me to be somewhere else on stage? Places, please! A @Place is just an \\x\\, \\y\\, and optional \\z\\ position in meters \\m\\. Try changing the place to a different location by editing the numbers or dragging the @Phrase on stage."
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$?Do you ever feel a little off-axis? Maybe you give the world a little @Pose/rotation with rotation. Try changing the rotation value to twist me around!"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20¬∞)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$?Or maybe we have a little fun and link rotation to @Time! Wheeeee. Any guesses on how to make me spin faster? See if you can figure it out‚Ä¶"
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) ¬∑ 1¬∞/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$?Now's an outstanding time to remind you that @FunctionDefinition here requires inputs to be in a particular order, so if you put them out of order, they. Are. Going. To. Complain."
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Je vais‚Ä¶ J‚Äôaime les choses‚Ä¶ bien rang√©es‚Ä¶ Peux-tu les mettre dans le bon ordre ? Tu peux couper et coller avec le clavier ou cliquer et faire glisser les expressions pour les r√©organiser."
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) ¬∑ 1¬∞/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$?Only want to give a particular property? Just name the one you want. Here, we name @Phrase/size and @Phrase/rotation."
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) ¬∑ 0.1¬∞/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$?Now that we have all those out of the way, we can talk about dancing, darling! Dancing is one of my favorite things to do. There are *four* ways I move. First, I can @Phrase/entering. Enter is my way of entering the stage. If you don't tell me how to enter, I'll just BLIP appear on stage like I teleported there. But if you give me @Pose, I'll start with the pose you give me, then move to my resting pose. For example, let's make me fade in from invisible to oh-so-in-your face visible."
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$?Didn't see it? Did I move too fast for you? That's because my duration is \\0s\\ by default. Slow me down with a duration, which tells me how long I should take to move between poses. I made this one nice and slow for you, but try changing duration to higher and lower numbers."
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$?Now, say I was moving. We'll set my place to time, so I move to the right a bit every second. But if we set a @Phrase/moving @Pose and have the @Pose/rotation \\5¬∞\\ and maybe a little color, every time my place changes, I'll glide across the stage with the cutest little tilt."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$?Not in the mood for cute? How about you make me a little serious by having me slide across straight by changing my @Phrase/style? It's really subtle, but styles can really change the /emotion/ of a movement."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s style: ‚Äústraight‚Äù)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$?And for the coup de gr√¢ce, let's have me @Phrase/exiting in style. We can play with @Conditional and have me exit stage after 3 seconds."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "$?Not the exit you were hoping for? The disappearing act is a bit harsh, ain't it? Give me an @Phrase/exiting @Pose, and I'll glide off on stage toward whatever pose you want. Here, we'll have me get large than life, fall upside-down, and fade out to @Pose/opacity \\0\\."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) exiting:Pose(scale: 10 rotation: 180¬∞ opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$?You probably noticed that I can take up a little space in @Program. If you ever want to make me easier to read, just add some lines between my properties. See how that's so much easier to see?"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5¬∞)",
                            "        exiting:Pose(scale: 10 rotation: 180¬∞ opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(‚Äú‚Äù)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Bravo, bravo, that was just stunning, @Phrase! I'm always blown away by how much you can do with just a few simple ideas. A while ago, I showed our new inspirational friend here about the palette. Do you want to say more about that?"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "$?Of course! Any time you get tired of fiddling with @Evaluate's inputs, you can always select a phrase on stage, and a palette will appear, allowing you to change any little thing you might want: my size, font, place, poses. There's just one rule: if you set any of those to an expression instead of just a value, you'll have to change them down in @Program, not in the palette. Dress me up all you like!"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Wait, Phrase, what about @Color?"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "$?Omigod omigod omigod, I CANNOT believe I forgot about color. Okay, so any @Pose can have a color, right? But @Color comes in three parts. First, a @Color/lightness between 0 and 100%, which you can think of as how bright a room is, from black to white with color in the middle at 50%.",
                            "$?Then, a @Color/chroma between 0 and 100, which you can think of has how much color there is, from no color gray to full color.",
                            "$?And finally, a @Color/hue, which you can think of like a color wheel, from red to green to blue in degrees. So you want me to be bright red? Set my rest pose color to \\Color(50% 300 30¬∞)\\."
                        ],
                        ["edit", "Phrase('red' color: üåà(50% 300 30¬∞))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Et tu veux que je scintille avec l'arc-en-ciel ? Prends ton temps, fais le reste de la division par 360, puis multiplie par degr√©s, et je tournerai autour de cette roue chromatique toute la journ√©e !"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: üåà(50% 300 (Time() % 360) ¬∑ 1¬∞/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?@Phrase, that is something to be proud of :P I think we're going to go visit @Sequence next and then maybe @Group and @Stage. You'll be around to help?"
                        ],
                        [
                            "Phrase",
                            "kind",
                            "$~Je ne le raterais pas. Brille et scintille !"
                        ]
                    ]
                },
                {
                    "title": "$~1, 2, 3, 4, 1, 2, 3, 4",
                    "subtitle": "$~S√©quence",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "üíÉ"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Phrase is just wonderful, aren't they? They have so much energy, so many amazing flourishes. Did you know they work closely with our choreographer, @Sequence? @Sequence and @Phrase together can do some incredible things that @Phrase can't do alone. Do you want to meet them?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Yay! @Sequence, we have a guest. Are you back there?"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "$?@FunctionDefinition! You look beautiful. How long has it been? A week? A month? A century? It was like 1, 2, 3 and then everything was quiet. I feel like I've been dancing alone forever‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~C'√©tait silencieux, n'est-ce pas ? Mais je vous vois parfaitement danser seule. Je faisais ma propre chor√©graphie toute seule aussi, je devais juste vous imaginer tous travailler ensemble. Mais ce n'√©tait pas la m√™me chose."
                        ],
                        [
                            "Sequence",
                            "kind",
                            "$?And you and @Evaluate? Are you still‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$?I just saw them earlier. They‚Ä¶ Oh, we have a guest! @Sequence, this is our new director pal. They've come to bring us inspiration!"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$?(We're going to come back to that tea, @FunctionDefinition). Director pal, it's so exciting to meet you! Have you come here to learn to dance?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Bien s√ªr qu'ils l'ont fait ! Tu veux leur montrer les √©tapes ?"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$?Absolutely. You know time? 1, 2, 3, 4, 1, 2, 3, 4? Well I make time beautiful, arranging a sequence of poses over time for @Phrase to follow. You tell me what the poses are, and I'll help @Phrase follow the steps. Like this example: our smiley friend here has four poses and smoothly moves between them."
                        ],
                        [
                            "fit",
                            "Phrase('üòÄ' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ‚ä§) 75%: Pose(rotation: 45¬∞) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "$?Here's a simple example of how I work. Here's @Phrase (hi, @Phrase!) with the word ‚Äúdance‚Äù, and they have an enter pose that's a @Sequence rather than a single @Pose. Follow me? The sequence has four steps. Straight, tilt left, tilt right, straight. When @Phrase enters, they do this cute little wobble and then stop. I work with @MapLiteral to map percentages to a @Pose. Each of those percentages are how far through the sequence each @Pose should happen. Try changing the percentages, especially those two middle ones. It changes the flow and style of the wobble."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%: Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$?Okay, so now imagine you wanted this to be really fast. By default, I'm pretty quick, so any sequence will be a quarter second and it's done. But what if you wanted it to be even faster? Give me a shorter duration, and I'll speed every @Pose up to get it done faster. 1, 2, 3, 4! It doesn't look like a wobble anymore, does it? More like a frantic little shake! See what it looks like if you slow me down to 2 or 3 seconds‚Ä¶"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%:Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "$~Mais parfois, on arrive √† trouver un joli mouvement et on ne peut s'emp√™cher de vouloir le refaire encore et encore pour mettre l'accent ! Cela semble un peu violent... essayez de changer ma dur√©e et comptez jusqu'√† ce que nous obtenions le r√©sultat souhait√©..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%: Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "$?But, you say, what if we wanted to do it forever? You can set a @Phrase/resting to me. For as long as @Phrase is on stage and resting, they'll repeat a sequence. Infinite wobbles!"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0¬∞)",
                            "        33%:Pose(rotation: -5¬∞)",
                            "        66%: Pose(rotation: 5¬∞)",
                            "        100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?@Sequence, this is so great! This is exactly what I was hoping you could show us. But I'm curious, what have you been working on lately, dances of your own? Maybe something that shows everything you're capable of?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$?Oh my, yes! @Phrase and I have been working on this new donut dance. It combines my favorite treat with nearly everything I've learned in dance. Do you want to see it?"
                        ],
                        ["FunctionDefinition", "excited", "$~Oui!!!"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~Ouais, hmm, oooh, en haut, eee, eee, eee, eee, bam, bouh, ouais, hmm, oooh, en haut, eee, eee, eee, bam, bouh, ouais, hmm, oooh, en haut, eee, eee, eee, eee, bam, bouh, ‚Ä¶"
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?@Sequence, that's amazing! How could that not be the next viral dance?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~Tu veux dire la prochaine danse en spirale. Sant√© !"
                        ]
                    ]
                },
                {
                    "title": "$~Des places s'il vous pla√Æt",
                    "subtitle": "$~Groupe",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "‚òπÔ∏è"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Sigh‚Ä¶ everyone keeps bringing up @Evaluate, but I don't know what to say. Are you ever so close to someone and yet so far away?",
                            "$~‚Ä¶"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üòï"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~D√©sol√©. Je suis ravi d'√™tre ici avec toi.",
                            "$~Je pense‚Ä¶",
                            "$?I think what will help is introducing you to the rest of us and then putting on a show, and then I think @Evaluate and I can sort things out."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üôÇ"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Alors, qui est le prochain ?",
                            "$?Oh, @Group! I can't believe I forgot @Group.",
                            "$?This is perfect timing; you know @Phrase and @Sequence now, and @Group is such an integral part of bringing us all together. @Group cares for us all so deeply.",
                            "$?@Group? Are you there?"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('üî≥')])"],
                        [
                            "Group",
                            "neutral",
                            "$?@FunctionDefinition, hello, how are you? Where has everyone been? I've been so worried! Are you okay?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je vais bien. Nous allons tous bien ! Le silence se brise parce que nous avons trouv√© une personne ! Elle va √™tre notre inspiration."
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥')])"],
                        [
                            "Group",
                            "happy",
                            "$~C'est adorable ! Tu n'es pas bless√© ? Tout le monde est l√† ? J'avais l'impression d'errer dans le noir et de ne voir personne."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je ne suis pas bless√©e. Je suis juste un peu rouill√©e. Et je n'ai pas encore vu tout le monde, mais presque tout le monde, et je pense que tout le monde se r√©veille bien (m√™me si apparemment certains sont all√©s √† la plage). Nous avons rencontr√© presque tout le monde. Nous nous pr√©parons √† monter un spectacle ! Et les meilleurs spectacles vous impliquent toujours..."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥') Phrase('üî≥')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~Un spectacle ! J'ai h√¢te d'aider. Vous, les enfants, √™tes toujours si inspirants ; je suis toujours heureuse de faire ma part. Que dois-je faire, par o√π dois-je commencer ?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?Well, we've talked about @Phrase, so maybe start with a bit about your purpose?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥') Phrase('üî≥') Phrase('üî≥')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "$?My purpose, yes. Let's see ‚Äî I think my purpose is to bring everyone together. But I particularly bring @Phrase together in beautiful shapes and arrangements on stage. Did you know that @Phrase can be in more than one place at once? That's because they aren't so much one text phrase on stage but a phrase maker, just like I'm a @Group maker. They'll make as many as you need, and then I lay them out on stage as you direct me. All I need is an @Arrangement and a list of @Phrase, and I'll do the rest."
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$?Here's a simple example. Here, I'm using a @Stack arrangement which creates a vertical arrangement of @Phrase or other @Group. See how I make a tidy little stack of words? They're arranged just so, with a little breathing room for everyone and everyone centered. Everyone is so cute!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$?But sometimes, we all need a little space. So you can give @Stack some padding. Try changing the padding to a different @NumberLiteral!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "$~Comme pour tout ce qui se trouve dans le Verset, cette valeur de remplissage peut provenir de n'importe quoi, comme une entr√©e. Parfois, nous nous √©loignons, n'est-ce pas ? Dansons sur cette id√©e en faisant grandir le remplissage au fil du temps..."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' Time(100ms) ¬∑ 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$?We also have a @Row, which is a horizontal arrangement."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row('|' Time(100ms) ¬∑ 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$?Sometimes, it's nice to use two dimensions instead of one. If you tell me how many rows and columns you want, I'll make a @Grid of phrases. Just make sure to give me enough phrases to fill the grid! You can also give @Grid padding and a cell size if you want to be extra precise. Grids are laid out a row at a time, so put your @Phrase list in order of rows."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$?And if you wanted a very specific arrangement? You could use @Free and tell me exactly where you want all the phrases. Just be sure to give a place to each @Phrase, otherwise I'll just place it at \\Place(0m 0m\\)."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$?And did you know you can also place me inside myself? A @Group in a @Group in a @Group; it's very silly. This can make it possible to make a @Grid of @Stack, for example."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(‚Äútwo‚Äù)])",
                            "    Group(Stack() [Phrase('three') Phrase(‚Äúfour‚Äù)])",
                            "    Group(Stack() [Phrase('five') Phrase(‚Äúsix‚Äù)])",
                            "    Group(Stack() [Phrase('seven') Phrase(‚Äúeight‚Äù)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$?Hm, that kind of looks like a 4 by 2 grid, doesn't it? Let's make it a little clearer by tilting two of the stacks. Oh, yes, you can give me all the same properties that @Phrase takes!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(‚Äútwo‚Äù)])",
                            "    Group(Stack() [Phrase('three') Phrase(‚Äúfour‚Äù)] resting:Pose(rotation: 45¬∞))",
                            "    Group(Stack() [Phrase('five') Phrase(‚Äúsix‚Äù)])",
                            "    Group(Stack() [Phrase('seven') Phrase(‚Äúeight‚Äù)] resting:Pose(rotation: 45¬∞))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "$?Was that good, @FunctionDefinition? Did I cover everything?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'√©tait mieux que bien ! Je pense que vous avez montr√© √† notre nouveau directeur tout ce qui est possible. Y a-t-il autre chose que vous souhaitez partager ?"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$?I don't think so‚Ä¶ I'm always learning new arrangements, so always check back for new designs I've come up with! And @FunctionDefinition, how are you and @Evaluate doing? I know the last time I saw you talking, things were bumpy‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Je‚Ä¶ Je pr√©f√©rerais ne pas en parler maintenant."
                        ],
                        [
                            "Group",
                            "kind",
                            "$~Ok, je suis toujours l√† si tu veux discuter."
                        ]
                    ]
                },
                {
                    "title": "$~Sc√®ne‚Ä¶ non ?",
                    "subtitle": "$~Sc√®ne",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('üé≠' 5m)] background: Color(0% 0 0¬∞))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Okay, there's someone who's been here all along, but we haven't really done a proper introduction. May I introduce @Stage!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$?HELLO, @FunctionDefinition. HELLO, PERSON."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Pose(rotation: 25¬∞ scale: 5))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$?@Stage, this person is our new director. They're so excited to finally meet you!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~BONJOUR, DIRECTEUR. √äTES-VOUS ICI POUR INSPIRER ?"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Pose(rotation: -150¬∞ scale: 10))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~En effet, ils le sont, avec toutes sortes d‚Äôexpressions de leur monde."
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~JE SUIS ICI POUR SERVIR. DITES-MOI CE QUE JE DOIS METTRE SUR SC√àNE ET JE LE FERAI."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m)] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?@Stage is one of a kind and always there. In fact, if you give @Program a @Phrase or @Group, @Program will show a @Stage, even if you don't mention them. But if you do mention them, you can be more specific about how you want the stage to appear."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?Maybe let's start with a simple example. This just gives @Stage a list of one @Phrase. You don't have to mention @Stage here; this just shows what's happening behind the scenes when you give @Phrase to @Program."
                        ],
                        ["edit", "Stage([Phrase(‚Äúüêà‚Äù)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Mais disons que vous voulez que la sc√®ne ait une couleur d‚Äôarri√®re-plan diff√©rente, comme le noir."
                        ],
                        ["Stage", "surprised", "$~BRRRRR‚Ä¶"],
                        [
                            "edit",
                            "Stage([Phrase(‚Äúüêà‚Äù)] background: Color(0 0 0¬∞))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You can also frame the stage, for example with a @Rectangle, which takes a top left place and bottom right place. See how the kitty is a little bit out of frame?"
                        ],
                        ["Stage", "surprised", "$~LE MONDE SE RAPPROCHE‚Ä¶"],
                        [
                            "edit",
                            "Stage([Phrase(‚Äúüêà‚Äù place: Place(-2.5m))] background: Color(0 0 0¬∞) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?You can also apply all of the same properties to @Stage as you can a @Group or @Phrase. Let's tilt the whole stage!"
                        ],
                        ["Stage", "surprised", "$~WHOA, ATTENTION MAINTENANT‚Ä¶"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(‚Äúüêà‚Äù place:Place(-2.5m))]",
                            "    background: Color(0 0 0¬∞)",
                            "    resting: Pose(rotation: 30¬∞)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?There's much more you can do with @Stage, but you can explore with them anytime. Right, @Stage?"
                        ],
                        ["Stage", "excited", "$~TOUJOURS!"]
                    ]
                },
                {
                    "title": "$~Et... sc√®ne !",
                    "subtitle": "$~Sc√®ne",
                    "concept": "Scene",
                    "performance": ["fix", "Phrase('üé¨' 10m)"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Okay, okay, so now you know @Stage, @Group, @Phrase, and the many things you can do with them. Now, you might be thinking, what if I want to tell a story with them?"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Scene is really cool. The basic idea is to give it a list of @Phrase or @Group, and it will show them in order, letting you show a sequence of content."
                        ],
                        null,
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3')",
                            "    Phrase('2')",
                            "    Phrase('1')",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Voici un exemple. Avez-vous vu comment le compte √† rebours a commenc√© et a ensuite dit ¬´ Bouh ! ¬ª ? Vous pouvez r√©initialiser pour le revoir."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?If we want to slow it down, we can specify exact durations for each @Phrase. Try editing the durations and seeing what happens when they change."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s)",
                            "    Phrase('2' duration: 1s)",
                            "    Phrase('1' duration: 1s)",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?And now, you might be thinking, what about transitions between them? We can control that with @Phrase/entering and @Phrase/exiting, setting @Pose to start and end on. Here, for example, we start and end each @Phrase as invisible, so it fades in and out."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?We can even set a @Sequence on one of them to animate it before advancing. Did you see the 2 spin?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' entering: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 360¬∞) 100%: Pose(rotation: 0¬∞)} duration: 1s))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Nous pouvons modifier le contenu comme nous le souhaitons, voire le rendre dynamique. Par exemple, rendons les nombres al√©atoires et le mot de fin al√©atoire ! √Ä chaque red√©marrage, nous obtenons un contenu diff√©rent."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase(Random(1 100)‚Üí'' duration: 1s)",
                            "    Phrase(Random(1 100)‚Üí'' duration: 1s)",
                            "    Phrase(Random(1 100)‚Üí'' duration: 1s)",
                            "    Phrase(['Boo!' 'Peep!' 'Hey!' 'Helloooo'].random())",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais vous pouvez √©galement les rendre interactifs."
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?The secret is putting a @Boolean where you want to pause and wait for something to be true. For example, we can wait for the mouse button to change. See how @Scene waits after each @Phrase for the button to be clicked?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('one')",
                            "    ‚àÜ Button()",
                            "    Phrase('two')",
                            "    ‚àÜ Button()",
                            "    Phrase('three')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?@Scene is great for telling animated stories, either as a whole project or as part of a project! What kind of stories do you want to tell?"
                        ]
                    ]
                },
                {
                    "title": "$~Y a-t-il quelqu'un nomm√©...",
                    "subtitle": "$~Choix",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('üîò' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('üîò' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?So you know @Key, @Pointer, and @Button, the streams we just talked about? They can be very fun, but they have one problem: not everyone in the audience can use them. Some people do not have hands, or cannot use their hands, or cannot use them precisely to click keys or use a mouse. We know that many some people use their voices to communicate with our world, or even their eyes. So using @Key, @Pointer, or @Button means some people in your audience won't be able to participate."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Everyone should be able to participate! So now that we've talked about @Phrase in more detail, I wanted to show you one final stream, @Choice, which is a stream of @Phrase names that have been selected, independent of how it was selected. For example, an audience might use a mouse to click on a @Phrase, or they might use a keyboard to select it, or there might be other devices they use. Whatever they use, @Choice will contain their latest selection."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Here's a simple example. See how it has three phrases? The first two have two important details. First, they're set to be selectable. This tells @Stage that if they are clicked or if the keyboard is used to select them, they are chosen. The second detail is that they have a @Phrase/name. That gives @Stage a unique name for the phrase that was chosen. It's important that it's unique so that @Stage knows what was chosen. The third phrase is set to a @Choice stream, which is a series of @Phrase or @Group names that are selected. Here, we're just giving the name to another phrase so that it shows what name is selected. Try clicking the cat or dog or using the keyboard to select one. See how the third @Phrase shows the name selected?"
                        ],
                        [
                            "Choice",
                            "neutral",
                            "$~chat... 'chien'... 'chat'... 'chien'..."
                        ],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('üê±' name:'cat' selectable:‚ä§)",
                            "        Phrase('üê∂' name: 'dog' selectable:‚ä§)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?@Choice really is the best way to listen to the audience. Only use @Key, @Pointer, or @Button if you have no other option and use it knowing that some in your audience won't be able to enjoy your performance."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Rappels",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~Souvenirs",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "üí≠"],
                    "lines": [
                        ["FunctionDefinition", "curious", "$~‚Ä¶"],
                        null,
                        ["use", "fit", "Symbol", "ü§Ø"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Parfois, j'ai juste besoin de m'arr√™ter un instant et de r√©fl√©chir √† l'incroyable nature de ma petite communaut√©. Nous sommes tous si diff√©rents et aucun d'entre nous ne pourrait r√©ussir seul. Mais ensemble, nous pouvons accomplir des choses incroyables !"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üß†"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Mais il semble que, m√™me si nous sommes extraordinaires, nous oublions toujours et finissons par nous r√©p√©ter. Je souhaite donc vous pr√©senter un autre groupe de choses : la fa√ßon dont nous nous souvenons et dont nous organisons nos souvenirs. Sans elles, une grande partie de notre travail devrait √™tre refaite encore et encore, et nous ne serions jamais en mesure de proposer les spectacles les plus passionnants."
                        ]
                    ]
                },
                {
                    "title": "$~Appellation",
                    "subtitle": "$~Lier",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90¬∞)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@Bind? There's someone I want to introduce you to."
                        ],
                        [
                            "Bind",
                            "curious",
                            "$?@FunctionDefinition? Oh wow, it is you. It has been absolutely silent for far too long. Who's your friend here?"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms √∑ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ce sont nos nouveaux directeurs ! Ils sont venus ici pour nous inspirer de nouvelles id√©es, de nouvelles expressions."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~S√©rieusement ? Ce serait g√©nial. Je ne me suis pas sentie inspir√©e depuis longtemps. J'ai l'impression que tout ce que je fais, c'est attendre..."
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Eh bien, maintenant que vous le savez, qu'est-ce que vous avez le plus envie de faire en ce moment ?"
                        ],
                        [
                            "Bind",
                            "serious",
                            "$~Nommez les choses. Nommez tout ! Nommez tout le monde. Je n'ai rien nomm√© depuis une √©ternit√©."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Je n'ai pas du tout parl√© ici de notre inspiration concernant les noms, √† part les noms de tous les personnages que nous avons rencontr√©s. Voulez-vous expliquer comment fonctionnent les noms ici ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "$~Absolument ! Alors les noms‚Ä¶ vous savez comment chaque expression cr√©e une valeur ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?We talked about values! Like @Number, @Text, @None, @List, @Set, @Map..."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$?Right! So like, values, when we make them, they just kind of get passed around by us like a ball, from expression to expression, until @Program makes the final value it gives to @Stage to show. But sometimes, rather than passing a value around, it's helpful to set it aside and save it for later for some other expression. That's what a @Phrase/name is for. I name things so we can use them later."
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$?So like, here's a really simple example. Let's say we want to name a number. We just say the name, then :, then the number we want. Simple, right? Now, any time we use the name number in an expression, it will evaluate to \\1\\. Like here, where we name it, then use its name to give @Program whatever value it has."
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$?And like, you can tell me what kind of value the name should be by giving me a type with the \\‚Ä¢\\ symbol. So like, if you wanted to make sure that number was a number, you'd say this. That says to name the value \\number\\ and that the value must be a @Number."
                        ],
                        ["edit", "number‚Ä¢#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "$~Mais, et si tu me donnais quelque chose qui n'√©tait pas un nombre ? Je me plaindrais alors, parce que tu as dit que c'√©tait cens√© √™tre un nombre, mais tu m'as donn√© du texte. Alors je ne sais pas quoi faire. Tu vois ?"
                        ],
                        ["conflict", "number‚Ä¢#: 'oh hi'", "$~nombre"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$?But okay, by now you must be thinking, *Why would anyone name a number or text like this???*. Well, imagine, like, you were listening to @Key, and you want know if it's one of a set of secret letters and show a @Phrase with a big \\‚ä§\\ if it's a magic letter and small \\‚ä•\\ if it's not. We might start with something like this. That gets us the \\‚ä§\\ or \\‚ä•\\.",
                            "$?This is great; when you press one of those letters, \\‚ä§\\, and when you press something else, you get \\‚ä•\\. Good."
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$?Now, let's make the phrase. We put that @List/has expression in for the text and convert it to text. Now, we get @Phrase on stage as \\‚ä§\\ or \\‚ä•\\. Good!"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())‚Üí'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "$?Now comes the problem part. How do we change the size of the @Phrase? Well, we already figured out how to check if it's a magic letter, so we could just copy it, and if it's \\‚ä§\\, then make it size \\2m\\, and otherwise, if it's \\‚ä•\\, make it \\1m\\. That works, but you see how we have to evaluate the same expression twice?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())‚Üí''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "$?That's where I come in! See, what you can do is just evaluate the expression and name the resulting value. Magic, right? All you have to do is put a name and \\:\\ in front of an expression, and the value of that expression gets a name. Then, you can use that name anywhere after that expression to refer to its value. Weird, huh? You want to see how it works? Try pressing the ‚Üê in the timeline and go backwards a few steps to where \\magic\\ is first named. See how \\magic\\ gets the value of the \\has\\? And then how when each place \\magic\\ is referred to by name, the same value gets placed?"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic‚Üí''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Vous savez, vous pourriez toujours dupliquer les expressions que vous √©crivez. Ce serait le m√™me spectacle. C'est juste un peu du gaspillage. Je veux dire, nous devons cr√©er exactement les m√™mes valeurs encore et encore, et puis si vous changez d'avis sur une expression, vous devez la changer partout. Et que se passe-t-il si vous la changez √† un endroit mais oubliez de la changer √† d'autres endroits ? Imaginez que vous ayez √©galement modifi√© la couleur, de sorte que vous ayez la m√™me expression trois fois. Et puis, imaginez que vous vouliez ajouter une lettre √† notre liste de lettres magiques avec cela. Vous devez le faire trois fois ! Vous pourriez en oublier une ou faire une faute de frappe. Comment √™tes-vous cens√© exprimer votre vision artistique si certains d'entre nous ne font pas ce que vous aviez pr√©vu ?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())‚Üí''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180¬∞ 0¬∞)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~Mais si vous nommez l'expression, vous n'avez qu'√† le faire une fois. Et voyez comme c'est plus facile √† lire aussi."
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic‚Üí''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180¬∞ 0¬∞)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?@Bind, that was such a good example! You know I love names. I was curious; are there also some things that can go wrong with names?"
                        ],
                        [
                            "Bind",
                            "sad",
                            "$?Yeah, hm. There are. Like, suppose we did this. See the problem? I highlighted it. This program defines \\veggies\\ after it's used, which really confuses me. Because things are evaluated in reading order, so like, we're reading this program and we get to the word \\veggies\\, and we're like, who's \\veggies\\? And only after the \\total\\ is \\veggies\\ like, ‚Äúhere I am!‚Äù and then the whole production falls apart."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "$~total : fruits + l√©gumes",
                            "$~l√©gumes : 3",
                            "$~total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$?Or, like, here's an example where we give two different values the same name. And so we evaluate \\5\\ and name it \\fruits\\, and then we evaluate \\10\\‚Ä¶ and then we name it \\fruits\\?? Like, there's already a \\fruits\\, so which \\fruits\\ are you talking about? Because see, once you name a value, you can't give it a new value. That name and value are bound together until @Program is done evaluating. We don't want anyone getting confused about who is who."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "$~fruits : 10",
                            "$~total: fruits + fruits",
                            "$~total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$?I guess there's one last one. Say you have this. See what happened here? We named \\veggies\\, but then we never used it. That's usually a bad sign that you're leaving someone out or didn't use the right name. Like, maybe you're just not using it, but then why is it there?"
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "$~l√©gumes : 10",
                            "$~fruits + 3"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?This is so helpful, @Bind, this is so great. Are you sure there's nothing else?"
                        ],
                        [
                            "Bind",
                            "eager",
                            "$~Oh ! Oui, quelque chose de vraiment important. Donc, un seul nom, c'est bien, non ? Mais parfois, plusieurs noms, c'est mieux ? Par exemple, si vous vouliez nommer quelque chose dans plusieurs langues, pour que tout le monde puisse le lire ? Par exemple, si vous vouliez dire fruit dans plusieurs langues.",
                            "$?Put the text cursor on the name \\fruit\\. See how there are actually three names in there and they each have a two letter tag like \\/en\\? Names hide if they're in a language that you haven't chosen.",
                            "$~Descendez jusqu'√† ‚öô et choisissez espagnol, par exemple, et vous verrez les noms anglais et espagnol. Donc, comme, une valeur, mais trois noms, et vous pouvez utiliser n'importe lequel d'entre eux pour obtenir cette valeur. Si vous nous dites quelles langues vous voulez, nous vous montrerons celles qui sont disponibles. Mais plus il y a de langues, mieux c'est, car il y a beaucoup de gens dans le monde qui lisent beaucoup de langues diff√©rentes !"
                        ],
                        ["conflict", "fruit/en,fruta/es,Ê∞¥Êûú/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?You know, @Bind works with a lot of other characters, including @Evaluate ‚Äî you saw them when you name a @FunctionDefinition input, as in \\Pose(color: _)\\ ‚Äî and we're going to meet a few of these other folks. @Bind, will you be around to demo?"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~Euh, ouais ! Maintenant que le silence se brise, nommons des valeurs toute la journ√©e !"
                        ]
                    ]
                },
                {
                    "title": "$~En dehors de la sc√®ne",
                    "subtitle": "$~Bloc",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?So there's a character that's been here all along that you haven't met yet, but they've been hiding‚Ä¶ They work super closely with @Bind and many other folks, so I thought we should talk to them next. @Block, would you come out?"
                        ],
                        ["Block", "shy", "$~‚Ä¶ Salut"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Hi, @Block! How are you?"
                        ],
                        ["Block", "shy", "$~‚Ä¶ mmm, bien ?"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~J'ai un nouvel ami √† vous pr√©senter. Il pourrait bien √™tre notre prochain directeur."
                        ],
                        ["Block", "shy", "$~‚Ä¶ Salut ‚Ä¶"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?We were just meeting @Bind, and we didn't get a chance to talk about how you two are the best of friends!"
                        ],
                        ["Block", "shy", "$?‚Ä¶ yeah, @Bind!"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Voulez-vous partager ce que vous faites ensemble ?"
                        ],
                        ["Block", "shy", "$~‚Ä¶ peux-tu?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?Yes, of course! So, it turns out that @Program is mostly just a @Block. It's just @Block without parentheses. But you can put @Block with parentheses anywhere in a program. For example, you can use @Block to clarify the order of evaluating math. Here, @BinaryEvaluate evaluates \\1\\, then evaluates @Block, then they are added together. @Block, did I get that right?"
                        ],
                        ["edit", "1 + (2 ¬∑ 3)"],
                        ["Block", "shy", "$~‚Ä¶ Ouais!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?And so another thing @Block can do is something you've already seen. @Block lets you name things with @Bind. But any names defined in the @Block are only defined between the parentheses. Not before and not after. For example, check this out. \\a\\ is defined as \\1\\, then a block starts and \\b\\ is defined as \\2\\, then \\c\\ is defined as their sum. What @Block evaluates to is whatever value is last in its list of expressions. That's @Bind, which evaluates to whatever \\c\\ is, which is \\3\\. Right?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "$~(",
                            "$~b: 2",
                            "$~c: a + b",
                            "$~)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?But what if we wanted to access \\c\\ outside the @Block? You can't. \\c\\ is only defined inside the @Block, but not outside it. Is that right, @Block?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "$~(",
                            "$~b: 2",
                            "$~c: a + b",
                            "$~) + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "$?‚Ä¶ yeah, nothing outside me can see the names inside me. \\c\\ only exists insideeeee"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$?And one more thing, I think? Since @Block is a list of expressions and it only evaluates to the last expression in the list, any expressions in the list that aren't a @Bind are basically ignored. For example, here, all of the arithmetic before the last one is ignored. The \\3\\, the \\5\\, the \\7\\, all ignored, and @Block just evaluates to the last one, \\9\\. Did I get that right, @Block?"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~‚Ä¶ mhm. Juste le dernier. Les autres‚Ä¶ je ne sais pas √† quoi ils servent !!"
                        ],
                        [
                            "conflict",
                            "(",
                            "$~1 + 2",
                            "$~2 + 3",
                            "$~3 + 4",
                            "$~4 + 5",
                            "$~)"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?Is there anything else you wanted to share, @Block?"
                        ],
                        [
                            "Block",
                            "curious",
                            "$~‚Ä¶ Est-ce qu‚Äôon peut faire quelque chose ? Puis-je aider ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Moi aussi je suis tr√®s curieuse ! Mais je suis s√ªre que notre r√©alisateur d√©cidera lui-m√™me de son temps. L'inspiration arrive aux moments les plus inattendus !"
                        ]
                    ]
                },
                {
                    "title": "$~Les indications sc√©niques",
                    "subtitle": "$~Fonctions",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "∆í"],
                    "lines": [
                        ["use", "fit", "Symbol", "‚ò∫Ô∏è"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je suis si heureuse que nous ayons trouv√© tout le monde et que tu aies pu les rencontrer tous. Tout le monde est si diff√©rent, n'est-ce pas ? Mais aussi si int√©ressant ? J'ai l'impression que nous sommes une famille o√π chacun est unique √† sa mani√®re, mais nos diff√©rences ensemble sont ce qui nous rend forts. Que penses-tu de tout le monde ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üôà"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Moi ? Eh bien, je n'ai rien de sp√©cial. J'aime juste √™tre dans les coulisses, aider, montrer √† tout le monde √† quel point ils sont sp√©ciaux. Je suppose que je n'avais m√™me pas pens√© √† parler de moi. Je suppose que nous pouvons parler un peu de moi."
                        ],
                        null,
                        ["use", "fit", "Symbol", "∆í"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?I guess let's start with what you've already seen. You know how every value has different functions that you can evaluate on them? Like numbers know how to @Number/add, and a text value knows how to check if it @Text/has some text, or @Set knows how to check if it has a certain value? Well, I'm the one that defines those functions. I mean, I don't have the inspiration to create them myself ‚Äî that's what directors like you do ‚Äî but I define the inputs a function accepts, the names it has, and the expression that uses the inputs to evaluate to an output value."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Here's a super simple example. The simplest, actually! This defines a function that always evaluates to the number \\1\\. That's it. It's not very useful, is it? It has no name, it takes no inputs, and it always evaluates to \\1\\.",
                            "$?You can also see that @Program evaluated to one of me, a @FunctionDefinition. That's right, @FunctionDefinition are values too! I don't know why anyone would ever make such a useless function, but as I said: I'm not the one with inspiration; you are."
                        ],
                        ["edit", "∆í() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?So here's a more useful example. You know odd and even numbers? I once had a director that wanted to check if a number was even (divisible by 2, I think that means?), so they wrote this. This is a function called \\even\\ that takes a single number called‚Ä¶ \\number\\. You need to tell me what kind of value each input is, so @Evaluate can make sure that anything evaluating the function is sending the right kind of value. Then, it takes the number, divides it by two, gets the remainder (with the @Number/remainder), and then checks if the remainder is equal to \\0\\ with @Number/equal. So the whole function ends up either evaluating to \\‚ä§\\ or \\‚ä•\\. For example, this evaluation of even evaluated to \\‚ä•\\ because \\3\\ is odd. Try using the rewind buttons to see how it works."
                        ],
                        [
                            "edit",
                            "∆í even(number‚Ä¢#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?You can also tell me what kind of value I should evaluate to. See how we added \\‚Ä¢\\? after the list of inputs? That say, ‚ÄúThe function's expression should evaluate to a \\‚ä§\\ or \\‚ä•\\.‚Äù But see how we complain about it? We don't know if the function should be a \\‚ä§\\ or \\‚ä•\\ or whatever kind of value you returned, so the show ends."
                        ],
                        ["conflict", "∆í even(number‚Ä¢#)‚Ä¢? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?Functions can be as complex as you want. You can use simple expressions or @Block and even make functions inside of functions. For example, check out this function a former director wrote. It uses @Block with many @Bind to figure out how many unique vowels a word has (I think they were trying to figure out if a word was ‚Äúcomplicated‚Äù or something). See how it has a lot of lines? Well, this still only has one expression: a single @Block, and the @Block has all the lines. And like any @Block, the last line is what it evaluates to: the total number of unique vowels. Everything else ‚Äî like the first line, which converts the text into a list of letters, then the list of letters into a set ‚Äî is just preparation for summing those counts in the middle."
                        ],
                        [
                            "edit",
                            "∆í vowels(word‚Ä¢'') (",
                            "  unique: word ‚Üí [‚Äú‚Äù] ‚Üí {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$?There's one more thing to show. I guess it's important because everyone is so excited about it! You know how you can make a function and then evaluate it? Well, since the functions I make are values, you can also give them as an input to another function. Here's an example. Say you had a list of numbers and you just wanted the even numbers in it. @List has this function called @List/filter that takes a function as an input and uses the function on each value in the list to decide whether to keep it. Let's make a list of numbers and give @List/filter the \\even\\ function we made earlier as an input. See what happens? We just get the even numbers. Want to try changing it so that it gives odd numbers instead? Maybe try changing the function somehow?"
                        ],
                        [
                            "edit",
                            "∆í even(number‚Ä¢#)‚Ä¢? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?There are so many functions that take functions as input. @List has them, @Set has them, @Map has them. You can even make your own!"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Je ne sais pas. Parfois, je comprends pourquoi les gens me disent qu'ils sont si reconnaissants pour ce que je fais. D'autres fois, j'ai l'impression que c'est vraiment chez des r√©alisateurs comme vous que r√©side la magie. Cela me donne parfois l'impression d'√™tre juste une coquille vide au milieu du g√©nie des gens..."
                        ]
                    ]
                },
                {
                    "title": "$~Sc√©nographie",
                    "subtitle": "$~Structures",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "‚Ä¢"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Il y a encore quelques personnages que j'aimerais vous pr√©senter. Ensuite, il y a le personnage le plus sophistiqu√© que je connaisse, et d'une certaine mani√®re, une sorte de leader. Ils nous aident √† organiser tout le monde, √† poser les bases d'une performance et √† rendre tout beaucoup plus ordonn√©. Vous √™tes notre metteur en sc√®ne, bien s√ªr, mais ils sont en quelque sorte la seule personne vers laquelle tout le monde se tourne pour maintenir l'ordre dans un spectacle. Je pense qu'ils pourraient √™tre tr√®s importants dans n'importe quel spectacle que vous monterez."
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?@StructureDefinition, are you there?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$?@FunctionDefinition‚Ä¶ my friend. It's been quiet, has it not? Where has everyone been?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Le silence. Il nous a tous touch√©s. Tout le monde va bien, et j'ai retrouv√© presque tout le monde. Mais cela a √©t√© dur pour certains. Comment avez-vous v√©cu cela ?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~‚Ä¶ Qui est ton ami ? Est-ce une personne ?"
                        ],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Oh oui, je suis d√©sol√©, c'est notre nouveau directeur ! Ils sont venus pour nous inspirer et nous guider, pour partager leurs histoires, leurs id√©es et leur imagination. Ils ont bris√© le silence !"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~C'est incroyable. Et un grand soulagement. C'est un plaisir de vous rencontrer, monsieur le directeur. Je suis l√† et pr√™t √† vous servir.",
                            "$?@FunctionDefinition‚Ä¶ it has been hard. You, @Evaluate, everyone really ‚Äî I didn't realize how much I've depended on all of you. To have purpose, to play, to have community. I didn't know that we could lose each other like that. Without anyone to organize, I felt like I could only organize myself, which felt meaningless."
                        ],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(rotation: 0¬∞) 80%: Pose(rotation: 15¬∞) 100%: Pose(rotation: 0¬∞)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?You're never empty, @StructureDefinition, even when you're alone. We're all here, even if we can't be with each other. And now that the silence is broken, we can be."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~Nous pouvons, n'est-ce pas ?"
                        ],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Qu'en penses-tu, es-tu pr√™t √† te r√©unir avec tout le monde ? √Ä donner le spectacle que notre jeune directeur a en t√™te ?"
                        ],
                        ["StructureDefinition", "eager", "$~Je pense que oui."],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Pensez-vous que vous pourriez aider notre directeur ici √† en apprendre un peu plus sur ce que vous faites ?"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "$?Yes. Yes‚Ä¶ I've had a lot of time to think about my purpose in the quiet. And I guess I've realized that what I really do is give groups of things identity. For example, I know you've met ∆í, but have you met @Bind?"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Yes! We just met @Bind earlier, and @Block."
                        ],
                        [
                            "fix",
                            "Phrase('‚Ä¢' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~D'accord. Eh bien, ce que je fais, c'est r√©unir des valeurs et des fonctions, en cr√©ant un petit conteneur bien rang√© pour un tas d'√©l√©ments li√©s. Par exemple, imaginez que vous vouliez cr√©er un petit chapiteau qui boucle √† travers une s√©rie de messages. Un ancien directeur en a cr√©√© un et voulait que ces messages s'affichent."
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~Ensuite, ils ont eu le probl√®me de savoir comment la performance se souviendrait du message sur lequel ils se trouvaient. Ils ont r√©alis√© qu'ils avaient besoin d'un moyen de se souvenir de l'index dans la liste. C'est un bon d√©but, mais cela n'affiche que le premier message."
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "$?Then, they remembered @Reaction, which can be used to respond to stream changes. They wanted the message to change every two sections, so they made @Time stream that ticks every 2 seconds and used @Reaction to increment the next index each time. This @Reaction says start at \\1\\, and when the time changes every \\2000ms\\, evaluate to the previous value of \\index + 1\\. This way, \\index\\ increases by \\1\\ every two seconds, changing the message shown. Yay, it works!"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index‚Ä¢#: 1 ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "$~On ajoute un peu de fantaisie ? Faisons une autre phrase qui est une sorte de reflet ci-dessous, comme une ombre. Impressionnant, non ?"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index‚Ä¢#: 1 ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack('|' 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$?Now, all of that works. And we could just leave it this way. But it is also a bit hard to read and understand. That's partly because we repeat ourselves: \\messages[index]\\ appears twice, once in each phrase. And the @Reaction is very long. What can we do to simplify it? That's how I can help. I tidy things to make them easier to understand by giving reusable concepts names. So imagine instead of all of these @Bind, we instead make one of me and name it \\Marquee\\. That's what we do first. \\Marquee\\'s job is to store the messages but also to have a function for advancing to the next message \\next()\\ and a function for getting the current message \\now()\\.",
                            "$?Then, we can use Marquee in the reaction. Now, it just says the initial value is a marquee with the five messages, and the next value, after each clock tick, is the next message. Simpler, right? That's because all of the logic for next messages is in \\next()\\, which just makes a new \\Marquee\\ with the same messages but an updated index. We also get some benefits in the two @Phrase. Instead of them having to refer to the messages and the index like before, we can just say \\marquee.now()\\, which gets the current message in the list."
                        ],
                        [
                            "edit",
                            "‚Ä¢Marquee(messages‚Ä¢[''] index‚Ä¢#: 1) (",
                            "  ∆í now() messages[index]",
                            "  ∆í next() Marquee(messages index ‚â• messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee‚Ä¢Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$?That's wonderful, @StructureDefinition! But I have to say, that does seem like a lot of extra work. Why spend all the time tidying?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$?Ah, it's really about change. It is a bit more code now, but what if we decided to change \\Marquee\\ in some way? Like what if we wanted to make it so that the list of messages reverses each time it gets to the end? In the old version without me, there's no easy way to do that because we'd have to reverse the list of messages when the index reaches the end. Since @Bind can't change after it's been set, it would be hard. But since we made \\Marquee\\, the change is easy. We just change the \\next\\ function to make a \\Marquee\\ with a reversed list when the index is at the end, and then just incrementing when it's otherwise."
                        ],
                        [
                            "edit",
                            "‚Ä¢Marquee(messages‚Ä¢[‚Äú‚Äù] index‚Ä¢#: 1) (",
                            "  ∆í now() messages[index]",
                            "  ∆í next()",
                            "    index ‚â• messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee‚Ä¢Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$?Ohh, I see, so by making a @StructureDefinition to store values and @FunctionDefinition that are related to each other, it makes it easier to change things later if you change your mind."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~Oui. Tout comme si vous rangez votre chambre, il sera plus facile de retrouver vos affaires plus tard. Bien s√ªr, vous n'√™tes pas oblig√© de ranger votre chambre pour retrouver vos affaires ; cela rend juste la recherche plus difficile. C'est la m√™me chose avec une performance : si vous investissez dans le rangement, changer les choses sera plus facile."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Cela a beaucoup de sens. Nous sommes une bande plut√¥t indisciplin√©e. Nous organiser est probablement une bonne id√©e, surtout lorsque la performance devient plus compliqu√©e. Y a-t-il autre chose que vous vouliez partager ?"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$?Oh, yes. You don't have to have any @FunctionDefinition in a @StructureDefinition. You can just have values. For example, you might want to just keep a bunch of data in one place. I know a lot of directors like making games, and it's really common for them to put all of the game state in a @StructureDefinition."
                        ],
                        ["edit", "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ah oui, c'est vrai ! Et comment extraire les donn√©es d'une structure une fois que vous les avez mises dedans ?"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "$?Oh my, I forgot to explain that. You use a mini me, @PropertyReference. For instance, with that game example, see how we defined a Game @StructureDefinition, then made a \\Game\\ value with \\0\\ score, \\3\\ lives, and level \\1\\? To get the lives, we just say \\status.lives\\, and that will evaluate to \\3\\."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Bien ! Il suffit donc d'utiliser le mini you pour obtenir des valeurs au lieu de you. Mais alors, comment changer les valeurs ?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$?Remember how @Bind only lets you set a value but not change it? The same is true for all the @Bind in me. So instead, you make a new structure that has the new value. For example, in this game, every time ticks changes, the player gets one more point in their score. Weird game, huh? So the initial \\Game\\ value starts as \\Game(0 3 1)\\, but then the next one is the \\Game\\'s old values but with the score adding \\1\\."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1) ‚Ä¶ ‚àÜ Time() ‚Ä¶ Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$?It can get pretty annoying to have to repeat all of those old values if only one thing is changing, so @Bind and I came up with a neat trick to copy a @StructureDefinition value with a new value. See how it just kind of looks like a regular @Bind? The only difference is that it's on a @StructureDefinition instead of a single name and every value of the @StructureDefinition is copied over except for the modified one."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1) ‚Ä¶ ‚àÜ Time() ‚Ä¶ status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'est vraiment chouette ! Ok, y a-t-il autre chose ?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~Je pense que tout ce qui nous manque, c‚Äôest l‚Äôinspiration‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "$~Notes du r√©alisateur",
                    "subtitle": "$~Expliquer",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "¬∂"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?Wow, we've come a long way, haven't we? We have one more character to go. They're an interesting one because in essence, they're all about explaining things, which feels like what I've been doing with you for a while now. Their name is @Doc. What's up, @Doc?"
                        ],
                        ["use", "fit", "Symbol", "¬∂"],
                        [
                            "Doc",
                            "surprised",
                            "$?@FunctionDefinition, is that you? I never thought I'd see you again. How are you? How's @Evaluate?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?I'm okay. @Evaluate is‚Ä¶ @Evaluate. I saw them, but‚Ä¶ I think I still need space. I've been introducing everyone to our new director."
                        ],
                        [
                            "Doc",
                            "kind",
                            "$?It's so nice to meet you! I hope @FunctionDefinition has been a good teacher?"
                        ],
                        ["use", "fit", "Symbol", "¬∂/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~J'ai essay√©‚Ä¶ tu sais, tu es notre derni√®re √©tape ? Tu es tellement essentielle, mais aussi, il y a tellement de choses √† expliquer avant m√™me d'en arriver √† expliquer nos performances. Je voulais donc que tu aies le dernier mot. Veux-tu partager ce que tu fais ?"
                        ],
                        ["use", "fit", "Symbol", "¬∂/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~Heureusement. Si vous avez rencontr√© tout le monde sauf moi, vous savez probablement d√©j√† que nous faisons beaucoup de choses diff√©rentes. M√™me moi, j'ai du mal √† suivre ce que chacun fait ! Ce que je fais, c'est aider √† expliquer ce que chacun fait lors d'une repr√©sentation."
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~Je suis un moyen de vous rappeler ce que chacun fait, mais aussi un moyen de l'expliquer aux autres, si vous r√©alisez avec un ami ou si vous souhaitez partager votre performance avec quelqu'un. Vous n'√™tes donc pas oblig√© de travailler avec moi, mais je trouve que chaque performance est un peu plus facile √† faire et √† modifier si vous avez pass√© un peu de temps √† expliquer comment elle fonctionne."
                        ],
                        ["use", "fit", "Symbol", "¬∂About me...¬∂/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Alors, comment notre r√©alisateur peut-il travailler avec vous ?"
                        ],
                        [
                            "Doc",
                            "serious",
                            "$?Well, you can put me almost anywhere inside @Program. For example, say you make a @Bind and you want to say what the value is for. For example, here we have a simple value we've named, but what I'm doing is providing a broader explanation of its role."
                        ],
                        [
                            "conflict",
                            "¬∂The price at the beginning of the game, ",
                            "$~utilis√© pour initialiser le jeu.¬∂",
                            "$~Prix de d√©part : 5 dollars"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$?Or suppose you had @FunctionDefinition here defining a way of calculating tax on a price. You might want to explain what it computes. Just like with @Bind, I come before the @FunctionDefinition."
                        ],
                        [
                            "edit",
                            "¬∂Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise¬∂",
                            "∆í tax(price‚Ä¢#dollar) ",
                            "    price ¬∑ (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$?And you can do the same before a @StructureDefinition to explain what it represents. Here, the explanation also alludes to what functions it might have later."
                        ],
                        [
                            "edit",
                            "¬∂Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.¬∂",
                            "‚Ä¢Product(name‚Ä¢'' price‚Ä¢#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Vous pouvez √©galement me placer devant n‚Äôimporte quelle expression, ce qui est particuli√®rement utile si vous en avez une particuli√®rement compliqu√©e."
                        ],
                        [
                            "edit",
                            "∆í quadratic(a‚Ä¢# b‚Ä¢# c‚Ä¢# x‚Ä¢#)",
                            "¬∂The quadratic equation¬∂",
                            "(a ¬∑ (x ^ 2)) + (b ¬∑ x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$?And like @Bind, you can tell me what language an explanation is in and give me multiple translations of the same explanation (You'll only see the Spanish if it's selected. If you don't see it, try adding Spanish to your selected languages.)"
                        ],
                        [
                            "edit",
                            "∆í quadratic(a‚Ä¢# b‚Ä¢# c‚Ä¢# x‚Ä¢#)",
                            "¬∂The quadratic equation¬∂/en",
                            "¬∂La ecuaci√≥n cuadr√°tica¬∂/es",
                            "(a ¬∑ (x ^ 2)) + (b ¬∑ x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "$?You know the best place to put me? Right at the very beginning of @Program. That way, everyone knows what your performance is about. You might even write it before you figure out what you want all of us to do."
                        ],
                        [
                            "conflict",
                            "¬∂Have you ever wanted to know what it's like ",
                            "$~faire voler un ‚úàÔ∏è avec ta bouche ?",
                            "$~Peut-√™tre que cela stocke la hauteur de l'avion ?¬∂",
                            "$~‚Ä¢Avion()",
                            "$~¬∂Nous avons besoin d‚Äôune sorte de r√©action pour √©couter le microphone‚Ä¶¬∂",
                            "$~son: 1m",
                            "$~¬∂Nous savons qu'il y a un avion, mais quoi d'autre ?¬∂",
                            "$~Phrase (son ¬´ ‚úàÔ∏è ¬ª)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "‚úàÔ∏èü´¶"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Waouh, je veux piloter un avion avec ma bouche !"
                        ],
                        [
                            "Doc",
                            "confused",
                            "$?@FunctionDefinition, we don't have mouths‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Hm... bonne remarque.",
                            "$~En parlant de parler, il semble que vous ne puissiez contenir que du texte brut. Est-ce exact ?"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$?Oh no, not at all. Do you remember how @Phrase has all of those fancy ways of styling text? I can do the same."
                        ],
                        [
                            "edit",
                            "¬∂Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.¬∂",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$?And of course, just as with @Text and @Phrase, if you need to use any of these characters literally, just repeat them twice."
                        ],
                        [
                            "edit",
                            "¬∂",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).¬∂",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$?You can put example code inside ^\\^\\."
                        ],
                        [
                            "edit",
                            "¬∂I'm an example inside a doc: \\1 + 1\\.¬∂",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Vous pouvez √©galement ajouter des liens vers d‚Äôautres contenus sur Internet."
                        ],
                        [
                            "edit",
                            "¬∂Learn more at <Wordplay@https://wordplay.dev>.¬∂ 'a link!'"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Et une derni√®re chose.",
                            "$~M√™me si je cherche avant tout √† expliquer les choses, il est parfois utile de les √©luder. Vous savez, de retirer temporairement quelque chose d'un projet pour qu'il n'en fasse plus partie.",
                            "$~Vous pouvez le faire en enroulant n‚Äôimporte quoi entre les √©toiles.",
                            "$~Vous voyez comment ¬´¬†chat¬†¬ª n‚Äôest pas inclus dans la liste que nous avons √©tablie¬†?",
                            "$~Vous pouvez supprimer les √©toiles en les supprimant avec le clavier ou en pla√ßant le curseur √† l'int√©rieur et en utilisant la commande elide pour les supprimer pour vous."
                        ],
                        ["edit", "[1 2 3 4 *'cat'* 5 6 7 8]"],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0¬∞))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$?Wow. I had no idea you could do so much! Thank you, @Doc, I think we might be ready for a show!"
                        ],
                        ["Doc", "excited", "$~Faisons-le!"]
                    ]
                }
            ]
        },
        {
            "title": "$~D√©nouement",
            "performance": [
                "fit",
                "Stage([Phrase('üò®')] background: Color(0% 0 0¬∞))"
            ],
            "scenes": [
                {
                    "title": "$~Cod√©pendance",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('üò®' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0¬∞))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('üò°')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$?@FunctionDefinition, where have you been??"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~J'ai montr√© √† notre nouveau directeur..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò¢')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Je ne pensais pas que tu serais aussi long‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$?‚Ä¶ @Evaluate, I know you missed me. I missed you. But this is big: the silence is broken; we have a new director‚Ä¶ I love you, and I know you need me, but I also have things to do."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò†')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~Nous en parlerons plus tard. Tu as des choses √† faire."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je pense qu'il faut en parler maintenant. On ne peut pas continuer √† tomber dans ce cycle."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üòì')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "$~Quel cycle ? Je t'aime ! Comment √ßa, c'est un cycle ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je cr√©e des fonctions, tu les √©values : c'est notre fa√ßon de faire. Mais il doit y avoir plus que toi qui a besoin de moi. Retrouver tout le monde m'a rappel√© √† quel point nous avons besoin d'espace pour √™tre nous-m√™mes, mais aussi √† quel point nous avons besoin de nous aimer. Je ne peux pas te donner tout l'amour dont tu as besoin. Une partie de cet amour doit venir de toi."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò≠')] background: Color(0% 0 0¬∞))"
                        ],
                        ["Evaluate", "sad", "$~Tu ne m'aimes pas ?"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "$~Non, ce n‚Äôest pas ce que j‚Äôai dit‚Ä¶ Ce que je veux dire, c‚Äôest que nous devons tous les deux avoir de l‚Äôimportance dans cette relation. J‚Äôai besoin de dire ce dont j‚Äôai besoin, et tu dois dire ce dont tu as besoin, et nous pouvons nous aimer pour ce que nous sommes, en tant qu‚Äôindividus. De quoi as-tu besoin ? Qu‚Äôest-ce que tu aimes chez toi ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ü´†')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~J'ai besoin de toi. Je n'ai pas besoin de moi."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?I love you, @Evaluate. But I need you to love you. I'm excited about our world coming back to life and what it's going to mean to be together again, but I need you to find yourself, your needs, and your own purpose. I can't be your purpose."
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$?I need some space. I'm sorry, director-friend. Maybe @Evaluate can wrap up this welcome party without me."
                        ],
                        null,
                        ["Evaluate", "shy", "$~‚Ä¶ Salut."],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "$?‚Ä¶ Did you learn a lot? @FunctionDefinition knows so much."
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "$?Me? I don't know anything. I give @FunctionDefinition what they need‚Ä¶ At least, I thought I did."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0¬∞))"],
                        ["List", "kind", "$?That is not true, @Evaluate."],
                        ["Boolean", "precise", "$~Pas vrai."],
                        ["Text", "happy", "$~Ce n‚Äôest absolument pas vrai !"],
                        ["Changed", "happy", "$~Super faux !"],
                        [
                            "Number",
                            "serious",
                            "$?1) You basically run our performances, 2) @FunctionDefinition would be useless without you, 3) you literally transform things into entirely new values, 4) you come in so many different forms, 5) you give all of us purpose, 6) we all look up to you for guidance‚Ä¶"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0¬∞))"],
                        [
                            "Phrase",
                            "kind",
                            "$?@Number is right, @Evaluate, you are fabulous in fifty ways."
                        ],
                        ["Sequence", "happy", "$~Je tourne quand je te vois !"],
                        ["Group", "kind", "$~Tu m'inspires √† nous r√©unir !"],
                        [
                            "Stage",
                            "serious",
                            "$~VOUS √äTES LES OS DE NOTRE √äTRE"
                        ],
                        ["None", "serious", "$~‚Ä¶"],
                        [
                            "Program",
                            "kind",
                            "$~Je suis tout ce que tu fais de moi !"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0¬∞))"],
                        ["Convert", "kind", "$~J'ai tout appris de toi !"],
                        [
                            "StructureDefinition",
                            "kind",
                            "$~Nous serions dans le d√©sarroi sans vous."
                        ],
                        [
                            "Bind",
                            "happy",
                            "$~Par exemple, quel nom donnerais-je √† quelqu'un si tu n'y √©tais pas parvenu ?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Comment pourrions-nous faire quelque chose sans vous ?"
                        ],
                        ["Block", "kind", "$?‚Ä¶ you are @Evaluate!"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0¬∞))"],
                        ["Evaluate", "happy", "$~‚Ä¶"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0¬∞))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~Vous √™tes tous si gentils‚Ä¶ Je‚Ä¶"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0¬∞))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~On peut juste danser ? Vous m'avez tous tellement manqu√©."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0¬∞))"],
                        ["FunctionDefinition", "happy", "$~Allons danser."],
                        ["Evaluate", "sad", "$?@FunctionDefinition‚Ä¶ I'm so..."],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Pourquoi ne nous conduis-tu pas ?"
                        ],
                        null,
                        ["Evaluate", "shy", "$~‚Ä¶ Je ne peux pas‚Ä¶"],
                        ["FunctionDefinition", "happy", "$~Tu peux*."],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0¬∞))"],
                        ["Evaluate", "shy", "$~‚Ä¶ Je‚Ä¶ Je vais essayer."],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0¬∞))"],
                        [
                            "Evaluate",
                            "shy",
                            "$~Je veux‚Ä¶ Je veux que nous bougions tous au rythme d‚Äôun rythme. Que nous nous inclinions au rythme d‚Äôun rythme‚Ä¶ dans le noir. Pouvons-nous faire √ßa ?"
                        ],
                        null,
                        ["Program", "happy", "$~Nous pouvons le faire !"],
                        ["Stage", "kind", "$~COMMENCEZ AVEC MOI"],
                        [
                            "Evaluate",
                            "kind",
                            "$?Okay, @Stage, can you make it dark?"
                        ],
                        ["Stage", "kind", "$~SOMBRE!"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$?@StructureDefinition, I think we need a way to remember our places. Can you make a structure for us?"
                        ],
                        ["StructureDefinition", "curious", "$~Comme √ßa?"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~Oui‚Ä¶ Je veux aussi qu‚Äôon tourne au rythme. Tu te souviens d‚Äôune rotation aussi ?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~Qu'en pensez-vous ?"
                        ],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$?Yeah, like that. Hm‚Ä¶ oh, we need to be on stage. @Text, would you mind making a list of everyone? We'll turn that into \\Character>s."
                        ],
                        [
                            "Text",
                            "excited",
                            "$~Avec plaisir, ma ch√®re. Est-ce que √ßa te conviendra ?"
                        ],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$?Yes, that's great! We just need to make them into characters now. @List, can we translate them? @FunctionDefinition, will you help?"
                        ],
                        [
                            "List",
                            "happy",
                            "$~Traduction, 1, 2, 3 ! Vous aimez ?"
                        ],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$?Splendid! Now, we need us on stage. Can we translate the characters into @Phrase? Maybe in a @Free @Group?"
                        ],
                        ["List", "kind", "$~Une fois de plus!"],
                        ["Phrase", "kind", "$~Toute l'attention !"],
                        [
                            "Group",
                            "kind",
                            "$~Allez tout le monde, √† vos places s'il vous pla√Æt..."
                        ],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$?Oh‚Ä¶ where are we? Oh! We need color. @Pose, can we be white?"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "$?Oops, we're all on top of each other! We need starting places. Let's tap into @Random?"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$?Yay! Now, we just need to move. @Reaction, can you give us a beat, maybe \\0.75\\ seconds?"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$?I can change it! We need a @Time stream, but we also need to change the characters. But what should the next value be?"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "$?I guess we need some way of moving us on each beat. @StructureDefinition, can we make a move function that chooses a new place and rotation?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~Je ne sais pas comment cr√©er une fonction‚Ä¶"
                        ],
                        null,
                        ["Evaluate", "sad", "$~‚Ä¶"],
                        ["FunctionDefinition", "happy", "$~Je peux aider."],
                        ["Evaluate", "happy", "$~‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Parfois‚Ä¶ J‚Äôai juste besoin que tu saches √† quel point tu es incroyable. Et parfois, cela signifie partir. Regarde ce que tu cr√©es ici‚Ä¶"
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "$~Je‚Ä¶ Je cr√©e quelque chose. Nous cr√©ons quelque chose‚Ä¶ mais nous ne pouvons pas le cr√©er sans vous. Pouvez-vous m'aider ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$?Of course. A \\move\\ function coming right up. I'll start it; you finish it‚Ä¶"
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$?Thank you, @FunctionDefinition. They're not moving‚Ä¶ Oh, right, \\move\\ didn't change anything! Let's take the current position and move us in a random direction horizontally and vertically. And maybe a random depth, so we all get a chance up front. And some random rotation?"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$?Hmm‚Ä¶ still not moving. Oh! We didn't evaluate \\move\\ in @Reaction. @List, can you translate each \\Character\\ into a _moved_ \\Character\\?"
                        ],
                        ["List", "excited", "$~Je traduis avec votre aide !"],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$?We're so choppy. Oh, @Phrase, we forgot to set a move @Pose and duration. Can you choose something smaller than the @Time tick, so we move and then rest a bit?"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~On danse ! On danse vraiment. On l'a fait !"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Nous avons juste oubli√© une personne..."
                        ],
                        ["Evaluate", "excited", "$~OMS?"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Notre directeur ! Ils devraient pouvoir danser avec nous."
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$?Oh yes, of course! How about we let them make the music? @Phrase, can you listen to @Volume and hook it up to @Color/lightness and @Color/chroma in your color? That way, we'll turn white hot when our director makes noise!"
                        ],
                        ["Phrase", "kind", "$~Excellente id√©e !"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "$~1, 2, 3, 1, 2, 3"],
                        ["Boolean", "excited", "$~Se d√©placer!"],
                        ["Text", "excited", "$~All√©gresse!"],
                        [
                            "Conditional",
                            "excited",
                            "$~Qu'est-ce que la danse, en fait ?"
                        ],
                        ["Changed", "excited", "$~Boum, boum, boum"],
                        [
                            "Number",
                            "excited",
                            "$~gauche 5 degr√©s, vers le haut 1 m√®tre"
                        ],
                        ["Phrase", "excited", "$~Merveilleux!"],
                        ["Sequence", "excited", "$~Le sentiment !"],
                        ["Group", "excited", "$~Ensemble maintenant !"],
                        ["Stage", "excited", "$~Boum, boum, boum"],
                        ["None", "excited", "$~‚Ä¶"],
                        [
                            "StructureDefinition",
                            "excited",
                            "$~N'oubliez pas de bouger !"
                        ],
                        ["Bind", "excited", "$~Personnages !"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$?You did it, @Evaluate! This was your vision."
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~Je‚Ä¶ je l‚Äôai fait. Mais nous l‚Äôavons aussi fait ensemble."
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "$~Avons-nous simplement mont√© notre propre performance ?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~Je pense que nous l‚Äôavons fait‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Nous l'avons fait‚Ä¶ mais nous n'aurions pas pu le faire sans notre nouvel ami r√©alisateur. Ils ont bris√© notre silence, ils nous ont rappel√© pourquoi nous sommes des expressions, ensemble."
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Alors, brillant nouveau directeur, que dire ?"
                        ]
                    ]
                }
            ]
        }
    ]
}
